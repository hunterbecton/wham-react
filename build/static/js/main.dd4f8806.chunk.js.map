{"version":3,"sources":["images/loader.svg","images/logo.svg","images/sound.svg","images/infinity.svg","images/key.svg","images/arrowPrev.svg","images/arrowNext.svg","api/Auth.js","hooks/useAuth.js","hooks/useSoundboard.js","styles/GlobalStyles.js","styles/theme.js","components/Toast/StyledToast.jsx","api/Payment.js","components/Homepage/homepageSounds.js","components/Layout/MaxWidthSection.jsx","components/Layout/Grid.jsx","components/Navigation/MainNav.jsx","components/Button/Button.jsx","components/Navigation/NavLink.jsx","components/Navigation/MobileMenu.jsx","components/Navigation/MobileMenuLink.jsx","components/Navigation/Navbar.jsx","components/Layout/MainLayout.jsx","components/Homepage/HomepageHeader.jsx","components/Homepage/HomepageHeading.jsx","components/Homepage/HomepageSubHeading.jsx","components/Sound/SoundboardContainer.jsx","components/Emoji/EmojiButton.jsx","components/Emoji/EmojiBubbleContainer.jsx","components/Emoji/EmojiWrapper.jsx","components/Emoji/EmojiHomeBubble.jsx","components/Emoji/AutoExpireHome.jsx","components/Homepage/HomepageProContainer.jsx","components/Homepage/HomepageProFeatures.jsx","components/Homepage/HomepageProFeature.jsx","components/Homepage/Homepage.jsx","components/Auth/AuthContainer.jsx","components/Auth/AuthWrapper.jsx","components/Form/TextError.jsx","components/Form/InputWrapper.jsx","components/Form/Input.jsx","components/Form/TextArea.jsx","components/Form/Select.jsx","components/Form/SelectNe.jsx","components/Form/Radio.jsx","components/Form/CheckboxGroup.jsx","components/Form/DatePicker.jsx","components/Form/FormikControl.jsx","components/Auth/AuthText.jsx","components/Auth/AuthTextWrapper.jsx","components/Auth/AuthTitle.jsx","components/Auth/ForgotPasswordLink.jsx","components/Auth/SignupForm.jsx","components/Auth/LoginForm.jsx","components/Loading/LoadingSection.jsx","components/Loading/Loading.jsx","components/Privacy/PrivacyContainer.jsx","components/Privacy/Privacy.jsx","components/Tos/Tos.jsx","components/Auth/ForgotPassword.jsx","components/Error/ErrorSection.jsx","components/Error/ErrorTitle.jsx","components/Error/Error.jsx","components/Auth/ResetPassword.jsx","components/Auth/PrivateRoute.jsx","sounds/defaultSounds.js","api/Soundboard.js","components/Editor/EditorTitle.jsx","components/Editor/EditorWrapper.jsx","components/Editor/EditorContainer.jsx","components/Editor/EditorSectionWrapper.jsx","components/Editor/EditorSection.jsx","components/Editor/EditorSectionTitle.jsx","components/Editor/EditorSelect.jsx","components/Editor/SoundSection.jsx","components/Editor/SettingsSection.jsx","components/Editor/EditButtons.jsx","components/Editor/EditorToggleWrapper.jsx","components/Editor/EditorToggle.jsx","components/Editor/EditorFieldWrapper.jsx","components/Editor/UploadButton.jsx","components/Editor/EditorUploadWrapper.jsx","components/Editor/EditorPlayWrapper.jsx","components/Editor/EditorEmojiWrapper.jsx","components/Editor/EditorEmojiSelect.jsx","components/Editor/SoundboardEditor.jsx","components/Emoji/AutoExpire.jsx","components/Emoji/EmojiBubble.jsx","components/Sound/SoundboardTitle.jsx","components/Sound/SoundboardHeader.jsx","components/Sound/SoundboardModal.jsx","components/Sound/Soundboard.jsx","components/Dashboard/DashboardWrapper.jsx","components/Dashboard/DashboardTable.jsx","components/Dashboard/DashboardTitle.jsx","components/Dashboard/DashboardTableWrapper.jsx","components/Pill/Pill.jsx","components/Pagination/PaginationWrapper.jsx","components/Pagination/PaginationButton.jsx","components/Pagination/PaginationButtonWrapper.jsx","components/Dashboard/EmptySection.jsx","components/Dashboard/EmptyTitle.jsx","components/Dashboard/Empty.jsx","components/Dashboard/OpenButton.jsx","components/Dashboard/Dashboard.jsx","api/User.js","components/Profile/UploaderWrapper.jsx","components/Profile/Profile.jsx","components/Profile/ProfileHeader.jsx","components/Navigation/NavLinkButton.jsx","components/Profile/UpdateProfileForm.jsx","App.js","index.js"],"names":["module","exports","apiSignup","username","email","password","passwordConfirm","a","fetch","process","REACT_APP_API_ENDPOINT","method","credentials","headers","Accept","body","JSON","stringify","res","json","data","apiLogin","apiLogout","apiForgotPassword","apiResetPassword","token","apiIsLoggedIn","authContext","createContext","ProvideAuth","children","auth","useProvideAuth","Provider","value","useAuth","useContext","useState","user","setUser","isAuthenticating","setIsAuthenticating","isLoggedIn","status","signup","login","logout","navigate","forgotPassword","resetPassword","soundboardContext","ProvideSoundboard","soundboard","useProvideSoundboard","useSoundboard","reducer","state","action","type","emojis","emojiQueue","payload","filter","emoji","id","useReducer","setSoundboard","GlobalStyles","createGlobalStyle","props","theme","colors","dark1","fonts","main","code","light1","light2","dark2","dark3","red1","red2","orange1","orange2","yellow1","yellow2","green1","green2","blue0","blue1","blue2","purple1","purple2","pink0","pink1","pink2","overlay1","breakpoints","s","m","spacings","xxs","xs","l","xl","xxl","animations","link","button","toggle","menu","shadows","drop1","StyledToast","styled","ToastContainer","apiGetSession","customer","apiGetPortalSession","apiGetNewCustomerId","homepageSounds","times","useEmoji","emojiId","emojiSkin","emojiNative","custom","_id","oid","title","audio","uid","MaxWidthSection","section","gt","gs","gtm","gsm","gts","gss","Grid","div","gtl","gsl","margin","MainNav","nav","Button","className","onClick","onKeyDown","disabled","size","NavLink","getProps","style","color","isPartiallyCurrent","MobileMenu","isOpen","MobileMenuLink","Navbar","isMenuOpen","setIsMenuOpen","to","src","Logo","alt","height","MainLayout","HomepageHeader","header","HomepageHeading","h1","HomepageSubHeading","h3","mb","SoundboardContainer","EmojiButton","role","aria-pressed","tabIndex","startl","endl","startm","endm","starts","ends","EmojiBubbleContainer","EmojiWrapper","symbol","label","aria-label","aria-hidden","EmojiHomeBubble","left","one","two","keyframes","floatAnimation","AutoExpireHome","useEffect","setTimeout","HomepageProContainer","HomepageProFeatures","HomepageProFeatureWrapper","HomepageProFeatureImage","img","HomepageProFeatureText","p","HomepageProFeature","image","text","stripePromise","loadStripe","Home","buttonRefs","useRef","timesArray","map","sound","spriteObj","Object","assign","time","i","useSound","sprite","play","randomNumber","max","min","Math","floor","random","randomPosOrNeg","handleCheckout","customerId","session","sessionId","stripe","redirectToCheckout","error","toast","key","innerRef","el","current","String","generate","handlePlayClick","e","handlePlayEnter","skin","Number","native","Sound","Infinity","Key","checkout","AuthContainer","AuthWrapper","TextError","InputWrapper","Input","name","rest","htmlFor","component","TextArea","as","Select","options","option","Radio","field","checked","CheckboxGroup","Fragment","includes","DatePicker","form","setFieldValue","selected","onChange","val","FormikControl","control","SelectNe","AuthText","AuthTextWrapper","AuthTitle","h2","ForgotPasswordLink","Link","SignupForm","location","useLocation","validationSchema","Yup","shape","required","matches","test","then","available","oneOf","console","log","message","onSubmit","initialValues","validateOnBlur","validateOnChange","isValid","isSubmitting","placeholder","autoComplete","LoginForm","LoadingSection","Loading","Loader","PrivacyContainer","Privacy","policyContent","setPolicyContent","policy","policyDetails","content","getPolicy","parse","ForgotPassword","ErrorSection","ErrorTitle","Error","ResetPassword","isError","setIsError","initialData","setInitialData","searchParams","search","PrivateRoute","Component","roles","runIsLoggedIn","from","path","noThrow","gcsPath","defaultSounds","apiUploadSounds","opts","indices","formData","serialize","apiCreateSoundboard","apiGetSoundboard","apiGetMySoundboard","apiGetAllMySoundboards","page","limit","apiUpdateMySoundboard","EditorTitle","EditorWrapper","EditorContainer","EditorSectionWrapper","EditorSection","EditorSectionTitle","EditorSelect","SoundSection","SettingsSection","EditButtons","EditorToggleWrapper","EditorToggle","EditorFieldWrapper","UploadButton","EditorUploadWrapper","EditorPlayWrapper","EditorEmojiSelect","SoundboardEditor","emojiOpen","setEmojiOpen","customSoundIds","setCustomSoundIds","playingSounds","setPlayingSounds","uploadingSounds","setUploadingSounds","window","soundManager","setup","debugMode","fetchData","sbId","sounds","Array","customSounds","length","audioFile","statusOptions","soundOptions","of","notifyUpdateError","notifyCreateError","handleUploadAudio","index","setFieldError","currentTarget","files","gcsUrl","newArray","handleDeleteAudio","values","handleSetCustomSoundIds","customSoundId","handleEmojiOpen","handleBlur","maxLength","push","remove","onDragEnd","result","destination","source","droppableId","newSoundIds","movedItemContent","splice","handleOnDragEnd","provided","ref","droppableProps","draggableId","draggableProps","accept","display","onBlur","handlePlay","url","playStatus","PLAYING","STOPPED","onFinishedPlaying","handleEndPlay","EditorEmojiWrapper","set","position","zIndex","handleEmojiClick","dragHandleProps","fontSize","cursor","defaultAudio","AutoExpire","EmojiBubble","SoundboardTitle","SoundboardHeader","socket","SoundboardModal","Soundboard","setSpriteObj","isHowlerLoaded","setIsHowlerLoaded","statusCode","silentRefs","room","io","REACT_APP_API","emit","on","click","off","onload","_sprite","handlePsuedoClick","pointerEvents","DashboardWrapper","DashboardTable","table","DashboardTitle","DashboardTableWrapper","PillWrapper","Pill","PaginationWrapper","PaginationButton","dir","ArrowPrev","ArrowNext","isLast","isFirst","PaginationButtonWrapper","EmptySection","EmptyTitle","OpenButton","Dashboard","totalCount","setTotalCount","numPages","setNumPages","setIsFirst","setIsLast","prevPage","setPrevPage","nextPage","setNextPage","currentPage","pageNum","totalSoundboards","soundboards","ceil","handlePagination","Empty","handleKeyDown","moment","updatedAt","utc","format","stopPropagation","handleSoundboardOpen","handleSoundboardOpenClick","apiGetMe","apiUpdateMe","UploaderWrapper","Profile","photo","ProfileHeader","NavLinkButton","UpdateProfileForm","formikRef","isModalOpen","setIsModalOpen","uppy","useMemo","Uppy","allowMulipleUploads","restrictions","maxFileSize","maxNumberOfFiles","allowedFileTypes","use","XHRUpload","endpoint","withCredentials","fieldName","ImageEditor","quality","cropperOptions","viewMode","background","autoCropArea","responsive","initialAspectRatio","aspectRatio","file","response","close","handleClose","handleOpen","currentUsername","currentEmail","handleCustomerPortal","closeModalOnClickOutside","open","onRequestClose","plugins","metaFields","locale","strings","dropPasteImport","proudlyDisplayPoweredByUppy","App","Theme","Homepage","Tos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd4f8806.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.a87f9c8f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.87d544cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/sound.28217797.svg\";","module.exports = __webpack_public_path__ + \"static/media/infinity.7d4c7912.svg\";","module.exports = __webpack_public_path__ + \"static/media/key.e55c459a.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowPrev.43255502.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowNext.55c098e4.svg\";","export const apiSignup = async (username, email, password, passwordConfirm) => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/signup`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: username,\n        email: email,\n        password: password,\n        passwordConfirm: passwordConfirm,\n      }),\n    })\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiLogin = async (email, password) => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/login`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    })\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiLogout = async () => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/logout`, {\n      method: 'GET',\n      credentials: 'include',\n    })\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiForgotPassword = async email => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/forgotPassword`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n      }),\n    })\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiResetPassword = async (token, password, passwordConfirm) => {\n  try {\n    const res = await fetch(\n      `${process.env.REACT_APP_API_ENDPOINT}/users/resetPassword/${token}`,\n      {\n        method: 'PATCH',\n        credentials: 'include',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          password: password,\n          passwordConfirm: passwordConfirm,\n        }),\n      },\n    )\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiIsLoggedIn = async () => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/isLoggedIn`, {\n      method: 'GET',\n      credentials: 'include',\n    })\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n","import React, { useState, useContext, createContext } from 'react'\nimport {\n  apiSignup,\n  apiLogin,\n  apiLogout,\n  apiForgotPassword,\n  apiResetPassword,\n  apiIsLoggedIn,\n} from '../api/Auth'\nimport { navigate } from '@reach/router'\n\nexport const authContext = createContext()\n\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth()\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>\n}\n\nexport const useAuth = () => {\n  return useContext(authContext)\n}\n\nconst useProvideAuth = () => {\n  const [user, setUser] = useState(null)\n  const [isAuthenticating, setIsAuthenticating] = useState(true)\n\n  const isLoggedIn = async () => {\n    setIsAuthenticating(true)\n\n    const res = await apiIsLoggedIn()\n\n    if (res.status !== 'success') {\n      setUser(null)\n    }\n\n    if (res.status === 'success') {\n      setUser(res.data)\n    }\n    setIsAuthenticating(false)\n  }\n\n  const signup = async ({ username, email, password, passwordConfirm }) => {\n    try {\n      const res = await apiSignup(username, email, password, passwordConfirm)\n\n      if (res.status === 'success') {\n        setUser(res.data.user)\n      }\n\n      return res\n    } catch (error) {\n      return error\n    }\n  }\n\n  const login = async ({ email, password }) => {\n    try {\n      const res = await apiLogin(email, password)\n\n      if (res.status === 'success') {\n        setUser(res.data.user)\n      }\n\n      return res\n    } catch (error) {\n      return error\n    }\n  }\n\n  const logout = async () => {\n    try {\n      const res = await apiLogout()\n      setUser(null)\n      navigate('/')\n      return res\n    } catch (error) {\n      setUser(null)\n      navigate('/')\n      return error\n    }\n  }\n\n  const forgotPassword = async ({ email }) => {\n    try {\n      const res = await apiForgotPassword(email)\n\n      return res\n    } catch (error) {\n      return error\n    }\n  }\n\n  const resetPassword = async ({ token, password, passwordConfirm }) => {\n    try {\n      const res = await apiResetPassword(token, password, passwordConfirm)\n\n      return res\n    } catch (error) {\n      return error\n    }\n  }\n\n  return {\n    user,\n    isAuthenticating,\n    isLoggedIn,\n    signup,\n    login,\n    logout,\n    forgotPassword,\n    resetPassword,\n  }\n}\n","import React, { useContext, useReducer, createContext } from 'react'\n\nexport const soundboardContext = createContext()\n\nexport function ProvideSoundboard({ children }) {\n    const soundboard = useProvideSoundboard()\n    return <soundboardContext.Provider value={soundboard}>{children}</soundboardContext.Provider>\n}\n\nexport const useSoundboard = () => {\n    return useContext(soundboardContext)\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD_EMOJI':\n            return {\n                ...state,\n                emojis: {\n                    emojiQueue: [...state.emojis.emojiQueue, action.payload],\n                },\n            };\n        case 'REMOVE_EMOJI':\n            return {\n                ...state,\n                emojis: {\n                    emojiQueue: state.emojis.emojiQueue.filter(\n                        (emoji) => emoji.id !== action.payload.id\n                    ),\n                },\n            };\n        case 'RESET_EMOJI':\n            return {\n                ...state,\n                emojis: {\n                    emojiQueue: []\n                }\n            }\n        default: {\n            return state;\n        }\n    }\n};\n\nconst useProvideSoundboard = () => {\n\n    const [soundboard, setSoundboard] = useReducer(reducer, {\n        emojis: {\n            emojiQueue: [],\n        },\n    });\n\n    return {\n        soundboard,\n        setSoundboard\n    }\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n    :root {\n      font-size: 16px;\n      position: relative;\n      margin-left: calc(100vw - 100%);\n    }\n    \n    html, body {\n      font-family: 'Roboto', sans-serif;\n      min-height:100%;\n    }\n\n    body {\n      background-color: ${props => props.theme.colors.dark1};\n      overflow-x: hidden;\n    }\n\n`   ","export default {\n    fonts: {\n        main: \"Roboto, sans-serif\",\n        code: \"Roboto Mono, monospace\",\n    },\n    colors: {\n        light1: \"#F2F2F2\",\n        light2: \"#999999\",\n        dark1: \"#1A1E21\",\n        dark2: \"#282F33\",\n        dark3: \"#333C42\",\n        red1: \"#EF2800\",\n        red2: \"#B21E00\",\n        orange1: \"#FB8B23\",\n        orange2: \"#DC6C04\",\n        yellow1: \"#FFCB47\",\n        yellow2: \"#FFBA0A\",\n        green1: \"#06D6A0\",\n        green2: \"#049A73\",\n        blue0: \"#8AEBFF\",\n        blue1: \"#00C7EF\",\n        blue2: \"#0095B2\",\n        purple1: \"#7D53DE\",\n        purple2: \"#5A27CD\",\n        pink0: \"#FFCCDD\",\n        pink1: \"#FF3377\",\n        pink2: \"#F50052\",\n        overlay1: \"rgba(26,30,33,0.7)\"\n    },\n    breakpoints: {\n        s: \"only screen and (max-width: 50rem)\",\n        m: \"only screen and (max-width: 65rem)\",\n    },\n    spacings: {\n        xxs: \".25rem\",\n        xs: \".5rem\",\n        s: \"1rem\",\n        m: \"2rem\",\n        l: \"3rem\",\n        xl: \"4rem\",\n        xxl: \"6rem\",\n    },\n    animations: {\n        link: \"color 0.3s ease\",\n        button: \"box-shadow 0.3s ease, transform 0.3s ease\",\n        toggle: \"transform 0.3s ease\",\n        menu: \"width 0.3s ease\"\n    },\n    shadows: {\n        drop1: \"drop-shadow(0px 4px 10px rgba(26, 30, 33, 0.2))\",\n    },\n}\n","import styled from 'styled-components'\nimport { ToastContainer } from 'react-toastify';\n\nconst StyledToast = styled(ToastContainer)`\n    .Toastify__toast  {\n        border-radius: 0;\n    }\n\n    .Toastify__toast--default {\n        background-color: ${props => props.theme.colors.dark2};\n        color: ${props => props.theme.colors.light1};\n    }\n\n    .Toastify__close-button--default {\n        color: ${props => props.theme.colors.light2};\n        opacity: 1;\n    }\n\n    .Toastify__progress-bar--default {\n        background: ${props => `linear-gradient(to right, ${props.theme.colors.red1}, ${props.theme.colors.orange1}, ${props.theme.colors.yellow1}, ${props.theme.colors.green1},  ${props.theme.colors.purple1}, ${props.theme.colors.pink1})`};\n    }\n\n    .Toastify__toast--error {\n        background-color: ${props => props.theme.colors.pink1};\n    }\n\n`\n\nexport default StyledToast\n","export const apiGetSession = async (id, customer) => {\n    try {\n        const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/payments/checkout-session/${id}-${customer}`, {\n            method: 'GET',\n            credentials: 'include',\n        })\n\n        const data = await res.json()\n\n        return data\n    } catch (error) {\n        return error\n    }\n}\nexport const apiGetPortalSession = async (customer) => {\n    try {\n        const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/payments/portal-session/${customer}`, {\n            method: 'POST',\n            credentials: 'include',\n        })\n\n        const data = await res.json()\n\n        return data\n    } catch (error) {\n        return error\n    }\n}\n\nexport const apiGetNewCustomerId = async () => {\n    try {\n        const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/payments/customer`, {\n            method: 'GET',\n            credentials: 'include',\n        })\n\n        const data = await res.json()\n\n        return data\n\n    } catch (error) {\n        return error\n    }\n}","const homepageSounds =\n    [{\n        times: [0, 552.0181405895692],\n        useEmoji: true,\n        emojiId: \"chicken\",\n        emojiSkin: \"1\",\n        emojiNative: \"🐔\",\n        custom: false,\n        _id: {\n            oid: \"5f341300863b4cf7ec703c5d\"\n        },\n        title: \"Chicken\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/chicken.mp3\",\n        uid: \"anFVChEBq\"\n    },\n    {\n        times: [2000, 1080],\n        useEmoji: true,\n        emojiId: \"boxing_glove\",\n        emojiSkin: \"1\",\n        emojiNative: \"🥊\",\n        custom: false,\n        _id: {\n            oid: \"5f341300863b4cf7ec703c5e\"\n        },\n        title: \"Karate Chop\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/karate-chop.mp3\",\n        uid: \"4JCWOMJqx\"\n    }, {\n        times: [11000, 1679.9999999999998],\n        useEmoji: true,\n        emojiId: \"moneybag\",\n        emojiSkin: \"1\",\n        emojiNative: \"💰\",\n        custom: false,\n        _id: {\n            oid: \"5f341300863b4cf7ec703c5f\"\n        },\n        title: \"Cha-Ching\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/cha-ching.mp3\",\n        uid: \"ERZvlfeUH\"\n    }, {\n        times: [14000, 1199.9999999999993],\n        useEmoji: true,\n        emojiId: \"dolphin\",\n        emojiSkin: \"1\",\n        emojiNative: \"🐬\",\n        custom: false,\n        _id: {\n            oid: \"5f341300863b4cf7ec703c60\"\n        },\n        title: \"Dolphin\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/dolphin.mp3\",\n        uid: \"680d__J6a\"\n    }, {\n        times: [17000, 2015.9863945578245],\n        useEmoji: true,\n        emojiId: \"star-struck\",\n        emojiSkin: \"1\",\n        emojiNative: \"🤩\",\n        custom: false,\n        _id: {\n            oid: \"5f341300863b4cf7ec703c61\"\n        },\n        title: \"Wow\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/kids-wow.mp3\",\n        uid: \"8HXeEufz5\"\n    }, {\n        times: [21000, 528.0045351473923],\n        useEmoji: true,\n        emojiId: \"warning\",\n        emojiSkin: \"1\",\n        emojiNative: \"⚠️\",\n        custom: false,\n        _id: {\n            oid: \"5f341300863b4cf7ec703c62\"\n        },\n        title: \"Error\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/error.mp3\",\n        uid: \"vqgeobbCg\"\n    }, {\n        times: [23000, 2039.999999999999],\n        useEmoji: true,\n        emojiId: \"postal_horn\",\n        emojiSkin: \"1\",\n        emojiNative: \"📯\",\n        custom: false,\n        _id: {\n            oid: \"5f341300863b4cf7ec703c63\"\n        },\n        title: \"Air Horn\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/airhorn.mp3\",\n        uid: \"yDCzXEpbe\"\n    }, {\n        times: [27000, 1920.0000000000018],\n        useEmoji: true,\n        emojiId: \"sunglasses\",\n        emojiSkin: \"1\",\n        emojiNative: \"😎\",\n        custom: false,\n        _id: {\n            oid: \"5f341300863b4cf7ec703c64\"\n        },\n        title: \"Cool\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/kids-cool.mp3\",\n        uid: \"dO9Kmnt9q\"\n    }, {\n        times: [30000, 575.9863945578231],\n        useEmoji: true,\n        emojiId: \"monkey_face\",\n        emojiSkin: \"1\",\n        emojiNative: \"🐵\",\n        custom: false,\n        _id: {\n            oid: \"5f3413f5863b4cf7ec703c6d\"\n        },\n        title: \"Monkey\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/monkey.mp3\",\n        uid: \"cvE9gWz2p\"\n    }, {\n        times: [32000, 1512.0181405895678],\n        useEmoji: true,\n        emojiId: \"clap\",\n        emojiSkin: \"1\",\n        emojiNative: \"👏\",\n        custom: false,\n        _id: {\n            oid: \"5f34143f863b4cf7ec703c77\"\n        },\n        title: \"Clapping\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/clapping.mp3\",\n        uid: \"b-YRjJQun\"\n    }, {\n        times: [5000, 792.0181405895689],\n        useEmoji: true,\n        emojiId: \"cricket\",\n        emojiSkin: \"1\",\n        emojiNative: \"🦗\",\n        custom: false,\n        _id: {\n            oid: \"5f34143f863b4cf7ec703c78\"\n        },\n        title: \"Crickets\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/crickets.mp3\",\n        uid: \"bBwvsE-Pd\"\n    }, {\n        times: [7000, 2135.9863945578236],\n        useEmoji: true,\n        emojiId: \"sparkles\",\n        emojiSkin: \"1\",\n        emojiNative: \"✨\",\n        custom: false,\n        _id: {\n            oid: \"5f341488863b4cf7ec703c84\"\n        },\n        title: \"Magic\",\n        audio: \"https://storage.googleapis.com/wham-uploads/defaults/magic.mp3\",\n        uid: \"onYpR-xfs\"\n    }]\n\nexport default homepageSounds","import styled from \"styled-components\"\n\nconst MaxWidthSection = styled.section`\n  grid-column: 2 / span 12;\n  display: grid;\n  grid-template-columns: repeat(12, minmax(auto, 4.2rem));\n  gap: ${props => props.gt ? props.gt : '2rem'} ${props => props.gs ? props.gs : '2rem'};\n\n  @media ${props => props.theme.breakpoints.m} {\n      grid-column: 2 / span 6;\n      grid-template-columns: repeat(6, 1fr);\n      gap: ${props => props.gtm ? props.gtm : '1rem'} ${props => props.gsm ? props.gsm : '1rem'};\n  }\n\n  @media ${props => props.theme.breakpoints.s} {\n    gap: ${props => props.gts ? props.gts : '1rem'} ${props => props.gss ? props.gss : '1rem'};\n  }\n\n`\n\nexport default MaxWidthSection","import styled from \"styled-components\"\n\nconst Grid = styled.div`\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr repeat(12, minmax(auto, 4.2rem)) 1fr;\n  gap: ${props => props.gtl ? props.gtl : '2rem'} ${props => props.gsl ? props.gsl : '2rem'};\n  margin: ${props => props.margin ? props.margin : 0};\n\n  @media ${props => props.theme.breakpoints.m} {\n    grid-template-columns: 2rem repeat(6, 1fr) 2rem;\n    gap: ${props => props.gtm ? props.gtm : '1rem'} ${props => props.gsm ? props.gsm : '1rem'};\n  }\n\n  @media ${props => props.theme.breakpoints.s} {\n    grid-template-columns: 1rem repeat(6, 1fr) 1rem;\n    gap: ${props => props.gts ? props.gts : '1rem'} ${props => props.gss ? props.gss : '1rem'};\n  }\n`\n\nexport default Grid","import styled from 'styled-components'\n\nconst MainNav = styled.nav`\n  grid-column: 2 / span 12;\n  padding: ${props => props.theme.spacings.m} 0;\n  display: flex;\n  align-items: center;\n\n    .nav-links {\n        margin-left: auto;\n    }\n\n    .mobile-menu__button {\n      display: none;\n      margin-left: auto;\n      z-index: 1000;\n    }\n\n    .nav-links button {\n        margin: 0 0 0 ${props => props.theme.spacings.s};\n    }\n\n\n    @media ${props => props.theme.breakpoints.m} {\n    grid-column: 2 / span 6;\n  }\n\n  @media ${props => props.theme.breakpoints.s} {\n    .nav-links {\n      display: none;\n    }\n\n    .mobile-menu__button {\n      display: initial;\n    }\n  }\n\n`\n\nexport default MainNav","import React from 'react'\nimport styled from 'styled-components'\n\nconst ButtonWrapper = ({ className, children, onClick, onKeyDown, type, disabled }) => {\n    return (\n        <button type={type ? type : 'button'} className={className} onClick={onClick} onKeyDown={onKeyDown} disabled={disabled}>\n            {children}\n        </button>\n    )\n}\n\nconst Button = styled(ButtonWrapper)`\n    cursor: pointer;\n    border: none;\n    background-color: ${props => props.theme.colors.blue1};\n    color: ${props => props.theme.colors.light1};\n    box-shadow: 0.25rem 0.25rem 0px 0px ${props => props.theme.colors.pink1};\n    font-weight: 700;\n    font-size: ${props => {\n        switch (props.size) {\n            case \"s\":\n                return '0.75rem'\n            case \"m\":\n                return `${props.theme.spacings.s}`\n            case \"l\":\n                return '1.25rem'\n            default:\n                return `${props.theme.spacings.s}`\n        }\n    }};\n    padding: ${props => {\n        switch (props.size) {\n            case \"m\":\n                return `${props.theme.spacings.xs} ${props.theme.spacings.s}`\n            case \"l\":\n                return `0.75rem 1.25rem`\n            default:\n                return `${props.theme.spacings.xs} ${props.theme.spacings.s}`\n        }\n    }};\n    transition: ${props => props.theme.animations.button};\n    width: fit-content;\n\n    &:hover {\n        transform: translate(0.125rem, 0.125rem);\n        box-shadow: 0rem 0rem 0px 0px ${props => props.theme.colors.pink1};\n    }\n\n    &:disabled {\n        color: ${props => props.theme.colors.light2};\n        pointer-events: none;\n        background-color: ${props => props.theme.colors.dark2};\n        box-shadow: 0.25rem 0.25rem 0px 0px ${props => props.theme.colors.dark3};\n    }\n\n`\n\nexport default Button","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from '@reach/router'\n\nconst StyledNavLink = props => (\n    <Link\n        {...props}\n        getProps={({ isPartiallyCurrent }) => {\n            // the object returned here is passed to the\n            // anchor element's props\n            return {\n                style: {\n                    color: isPartiallyCurrent ? \"#00C7EF\" : \"\"\n                }\n            };\n        }}\n    />\n);\n\nconst NavLink = styled(StyledNavLink)`\n    font-size: 1rem;\n    font-weight: 700;\n    text-decoration: none;\n    margin: 0 ${props => props.theme.spacings.s};\n    transition: ${props => props.theme.animations.link};\n    color: ${props => props.theme.colors.light1};\n\n    &:hover {\n        color: ${props => props.theme.colors.blue1};\n    }\n\n`\n\nexport default NavLink","import styled from 'styled-components'\n\nconst MobileMenu = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    height: 100vh;\n    width: ${props => props.isOpen ? \"100vw\" : \"0\"};\n    background-color: ${props => props.theme.colors.dark2};\n    z-index: 999;\n    transition: ${props => props.theme.animations.menu};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n\n    .mobile__nav-links {\n        opacity: ${props => props.isOpen ? '1' : '0'};\n        display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    }\n\n`\n\nexport default MobileMenu","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from '@reach/router'\n\nconst StyledNavLink = props => (\n    <Link\n        {...props}\n        getProps={({ isPartiallyCurrent }) => {\n            // the object returned here is passed to the\n            // anchor element's props\n            return {\n                style: {\n                    color: isPartiallyCurrent ? \"#00C7EF\" : \"\"\n                }\n            };\n        }}\n    />\n);\n\nconst MobileMenuLink = styled(StyledNavLink)`\n    font-size: 2.5rem;\n    font-weight: 700;\n    text-decoration: none;\n    margin: 1rem;\n    transition: ${props => props.theme.animations.link};\n    color: ${props => props.theme.colors.light1};\n\n    &:hover {\n        color: ${props => props.theme.colors.blue1};\n    }\n\n`\n\nexport default MobileMenuLink","import React, { Fragment, useState } from 'react'\nimport { navigate, Link } from '@reach/router'\n\nimport { useAuth } from '../../hooks/useAuth'\nimport Logo from '../../images/logo.svg'\nimport MainNav from './MainNav'\nimport Button from '../Button/Button'\nimport NavLink from '../Navigation/NavLink'\nimport MobileMenu from './MobileMenu'\nimport MobileMenuLink from './MobileMenuLink'\n\nconst Navbar = () => {\n  const { user } = useAuth()\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n\n  return (\n    <MainNav>\n      <Link to=\"/\">\n        <img src={Logo} alt=\"Wham Logo\" height=\"24\" />\n      </Link>\n      <div className=\"nav-links\">\n        {user && (\n          <Fragment>\n            <NavLink to=\"/dashboard\">Dashboard</NavLink>\n            <NavLink to=\"/profile\">Profile</NavLink>\n            <Button onClick={() => navigate('/soundboard/create')}>\n              Create\n            </Button>\n          </Fragment>\n        )}\n        {!user && (\n          <Fragment>\n            <NavLink to=\"/login\">Login</NavLink>\n            <Button onClick={() => navigate('/signup')}>Join</Button>\n          </Fragment>\n        )}\n      </div>\n      <Button\n        onClick={() => setIsMenuOpen(!isMenuOpen)}\n        className=\"mobile-menu__button\"\n      >\n        {isMenuOpen ? 'Close' : 'Menu'}\n      </Button>\n      <MobileMenu isOpen={isMenuOpen}>\n        <div className=\"mobile__nav-links\">\n          {user && (\n            <Fragment>\n              <MobileMenuLink to=\"/dashboard\">Dashboard</MobileMenuLink>\n              <MobileMenuLink to=\"/profile\">Profile</MobileMenuLink>\n              <MobileMenuLink to=\"/soundboard/create\">Create</MobileMenuLink>\n            </Fragment>\n          )}\n        </div>\n      </MobileMenu>\n    </MainNav>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Grid from '../Layout/Grid'\nimport NavBar from '../Navigation/Navbar'\n\nconst MainLayout = ({ children, margin }) => {\n    return (\n        <Grid gtl=\"0\" gsl=\"2rem\" margin={margin}>\n            <NavBar />\n            {children}\n        </Grid>\n    )\n}\n\nexport default MainLayout\n","import styled from 'styled-components'\n\nconst HomepageHeader = styled.header`\n    grid-column: 1 / span 12;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 3rem;\n    margin: ${props => props.margin ? props.margin : '2rem 0'};\n\n    @media ${props => props.theme.breakpoints.m} {\n      grid-column: 1 / span 6;\n  }\n`\n\nexport default HomepageHeader","import styled from 'styled-components'\n\nconst HomepageHeading = styled.h1`\n    font-size: 5rem;\n    line-height: 90%;\n    letter-spacing: normal;\n    font-weight: 700;\n    color: ${props => props.theme.colors.light1};\n    text-align: center;\n    max-width: 50rem;\n    margin-bottom: 1.5rem;\n`\n\nexport default HomepageHeading","import styled from 'styled-components'\n\nconst HomepageSubHeading = styled.h3`\n    font-size: 1.25rem;\n    letter-spacing: normal;\n    font-weight: 400;\n    color: ${props => props.theme.colors.light1};\n    text-align: center;\n    max-width: 26rem;\n    margin-bottom: ${props => props.mb ? props.mb : '2rem'};\n`\n\nexport default HomepageSubHeading","import styled from \"styled-components\";\nimport MaxWidthSection from '../Layout/MaxWidthSection'\n\nconst SoundboardContainer = styled(MaxWidthSection)`\n    margin: ${props => props.theme.spacings.m} 0;\n\n    div {\n        transition: ${props => props.theme.animations.button};\n    }\n\n    div:hover {\n        transform: translate(0.25rem, 0.25rem)\n    }\n\n    div:nth-child(7n + 1) {\n        background-color: ${props => props.theme.colors.red1};\n        box-shadow: 0.5rem 0.5rem 0px 0px ${props => props.theme.colors.red2};\n    }\n\n    div:nth-child(7n + 1):hover {\n        box-shadow: 0rem 0rem 0px 0px ${props => props.theme.colors.red2};\n    }\n\n    div:nth-child(7n + 2) {\n        background-color: ${props => props.theme.colors.orange1};\n        box-shadow: 0.5rem 0.5rem 0px 0px ${props => props.theme.colors.orange2};\n    }\n\n    div:nth-child(7n + 2):hover {\n        box-shadow: 0rem 0rem 0px 0px ${props => props.theme.colors.orange2};\n    }\n\n    div:nth-child(7n +3) {\n        background-color: ${props => props.theme.colors.yellow1};\n        box-shadow: 0.5rem 0.5rem 0px 0px ${props => props.theme.colors.yellow2};\n    }\n\n    div:nth-child(7n + 3):hover {\n        box-shadow: 0rem 0rem 0px 0px ${props => props.theme.colors.yellow2};\n    }\n\n    div:nth-child(7n +4) {\n        background-color: ${props => props.theme.colors.green1};\n        box-shadow: 0.5rem 0.5rem 0px 0px ${props => props.theme.colors.green2};\n    }\n\n    div:nth-child(7n + 4):hover {\n        box-shadow: 0rem 0rem 0px 0px ${props => props.theme.colors.green2};\n    }\n\n    div:nth-child(7n +5) {\n        background-color: ${props => props.theme.colors.blue1};\n        box-shadow: 0.5rem 0.5rem 0px 0px ${props => props.theme.colors.blue2};\n    }\n\n    div:nth-child(7n + 5):hover {\n        box-shadow: 0rem 0rem 0px 0px ${props => props.theme.colors.blue2};\n    }\n\n    div:nth-child(7n + 6) {\n        background-color: ${props => props.theme.colors.pink1};\n        box-shadow: 0.5rem 0.5rem 0px 0px ${props => props.theme.colors.pink2};\n    }\n\n    div:nth-child(7n + 6):hover {\n        box-shadow: 0rem 0rem 0px 0px ${props => props.theme.colors.pink2};\n    }\n\n    div:nth-child(7n + 7) {\n        background-color: ${props => props.theme.colors.purple1};\n        box-shadow: 0.5rem 0.5rem 0px 0px ${props => props.theme.colors.purple2};\n    }\n\n    div:nth-child(7n + 7):hover {\n        box-shadow: 0rem 0rem 0px 0px ${props => props.theme.colors.purple2};\n    }\n\n`;\n\nexport default SoundboardContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst AriaDiv = ({ className, children, onClick, onKeyDown }) => {\n    return (\n        <div\n            role=\"button\"\n            aria-pressed=\"false\"\n            tabIndex=\"0\"\n            className={className}\n            onClick={onClick}\n            onKeyDown={onKeyDown}\n        >\n            {children}\n        </div>\n    );\n};\n\nconst EmojiButton = styled(AriaDiv)`\ngrid-column: ${props => props.startl ? props.startl : 'auto'} / ${props => props.endl ? props.endl : 'auto'};\n  width: 100%;\n  padding-top: 100%; /* 1:1 Aspect Ratio */\n  position: relative;\n  user-select: none;\n  cursor: pointer;\n\n    span {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    }\n\n    @media ${props => props.theme.breakpoints.m} {\n        grid-column: ${props => props.startm ? props.startm : 'auto'} / ${props => props.endm ? props.endm : 'auto'};\n\n  }\n\n  @media ${props => props.theme.breakpoints.s} {\n    grid-column: ${props => props.starts ? props.starts : 'auto'} / ${props => props.ends ? props.ends : 'auto'};\n  }\n\n`;\n\nexport default EmojiButton;\n","import styled from 'styled-components'\n\nconst EmojiBubbleContainer = styled.div`\n    overflow: hidden;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    pointer-events: none;\n`\n\nexport default EmojiBubbleContainer","import React from \"react\";\n\nconst EmojiWrapper = ({ className, symbol, label }) => {\n    return (\n        <span\n            role=\"img\"\n            aria-label={label ? label : \"\"}\n            aria-hidden={label ? \"false\" : \"true\"}\n            className={className}\n        >\n            {symbol}\n        </span>\n    );\n};\n\nexport default EmojiWrapper;","import styled, { keyframes } from 'styled-components'\nimport EmojiWrapper from './EmojiWrapper'\n\nconst floatAnimation = (one, two) => keyframes`\n    0% { bottom: -10%; transform : translateX(0)}\n    50% { transform: translateX(${one}px)}\n    100% {bottom: 110%; transform: translateX(${two}px)}\n`;\n\nconst EmojiHomeBubble = styled(EmojiWrapper)`\nposition: absolute;\n  user-select: none;\n  font-size: ${({ size }) => (size ? size : 2)}rem;\n  bottom: 0;\n  left: ${({ left }) => (left ? left : 10)}%;\n  animation: ${({ one, two }) => floatAnimation(one, two)}\n    ${({ size }) => (size < 3 ? 8 : 9)}s ease-in forwards;\n`\nexport default EmojiHomeBubble","import React, { Fragment, useEffect } from \"react\";\nimport { useSoundboard } from '../../hooks/useSoundboard'\n\nconst AutoExpireHome = ({ children, id }) => {\n\n    const { setSoundboard } = useSoundboard()\n\n    useEffect(() => {\n        setTimeout(() => {\n            setSoundboard({ type: 'REMOVE_EMOJI', payload: { id } })\n        }, 9000);\n    }, []);\n\n\n    return <Fragment>{children}</Fragment>;\n};\n\nexport default AutoExpireHome;\n","import styled from 'styled-components'\n\nconst HomepageProContainer = styled.div`\n`\n\nexport default HomepageProContainer","import styled from 'styled-components'\n\nconst HomepageProFeatures = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n`\n\nexport default HomepageProFeatures","import React from 'react'\nimport styled from 'styled-components'\n\nconst HomepageProFeatureWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 3rem 1.5rem 4rem 1.5rem;\n`\n\nconst HomepageProFeatureImage = styled.img`\n    height: 3rem;\n    margin: 1rem;\n`\n\nconst HomepageProFeatureText = styled.p`\n    color: ${props => props.theme.colors.light1};\n    font-size: 1rem;\n    font-weight: 700;\n    text-align: center;\n`\n\nconst HomepageProFeature = ({ image, alt, text }) => {\n    return (\n        <HomepageProFeatureWrapper>\n            <HomepageProFeatureImage src={image} alt={alt} />\n            <HomepageProFeatureText>{text}</HomepageProFeatureText>\n        </HomepageProFeatureWrapper>\n    )\n}\n\nexport default HomepageProFeature\n","import React, { Fragment, useRef } from 'react'\nimport { navigate } from '@reach/router'\nimport { Emoji } from 'emoji-mart'\nimport useSound from 'use-sound'\nimport { generate } from \"short-id\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport { toast } from 'react-toastify';\n\nimport { apiGetSession, apiGetNewCustomerId } from '../../api/Payment'\nimport { useSoundboard } from '../../hooks/useSoundboard'\nimport homepageSounds from '../Homepage/homepageSounds'\nimport MaxWidthSection from '../Layout/MaxWidthSection'\nimport MainLayout from '../Layout/MainLayout'\nimport HomepageHeader from '../Homepage/HomepageHeader'\nimport HomepageHeading from '../Homepage/HomepageHeading'\nimport HomepageSubHeading from '../Homepage/HomepageSubHeading'\nimport Button from '../Button/Button'\nimport SoundboardContainer from '../Sound/SoundboardContainer'\nimport EmojiButton from '../Emoji/EmojiButton'\nimport EmojiBubbleContainer from '../Emoji/EmojiBubbleContainer'\nimport EmojiHomeBubble from '../Emoji/EmojiHomeBubble'\nimport AutoExpireHome from '../Emoji/AutoExpireHome'\nimport HomepageProContainer from '../Homepage/HomepageProContainer'\nimport HomepageProFeatures from '../Homepage/HomepageProFeatures'\nimport HomepageProFeature from '../Homepage/HomepageProFeature'\nimport Sound from '../../images/sound.svg'\nimport Infinity from '../../images/infinity.svg'\nimport Key from '../../images/key.svg'\nimport { useAuth } from '../../hooks/useAuth'\n\nconst stripePromise = loadStripe('pk_live_51HFi8kD0C39kKgHjE5ZXplCTM9AUi708a861j9pZRlHKmXLbC4pk9jvFxQF3wV8TrThHUq5ECOLwz8Cfn20lVbsO00XrQv4i9Y')\n\nconst Home = () => {\n\n    const { user } = useAuth()\n\n    const buttonRefs = useRef([])\n\n    const { soundboard, setSoundboard } = useSoundboard()\n\n    const sprite = 'https://storage.googleapis.com/wham-uploads/sprite-user-5f0f34fc760271797fa93c86-1597248646837.mp3'\n\n    const timesArray = homepageSounds.map(sound => sound.times)\n\n    const spriteObj = Object.assign(\n        ...timesArray.map((time, i) => ({ [i]: time })),\n    )\n\n    const [play] = useSound(sprite, {\n        sprite: spriteObj\n    })\n\n    const randomNumber = (max, min) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n\n    const randomPosOrNeg = (max, min) => {\n        let randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n\n        randomNumber *= Math.floor(Math.random() * 2) === 1 ? 1 : -1;\n\n        return randomNumber;\n    };\n\n    const handlePlayClick = (emojiId, emojiNative, i) => {\n        play({ id: String(i) })\n\n        setSoundboard({\n            type: \"ADD_EMOJI\", payload: {\n                emojiId,\n                emojiNative,\n                size: randomNumber(3, 2),\n                left: randomNumber(100, 0),\n                one: randomPosOrNeg(200, 50),\n                two: randomPosOrNeg(200, 50),\n                id: generate()\n            }\n        })\n    }\n\n    const handlePlayEnter = (emojiId, emojiNative, e, i) => {\n        if (e.key === 'Enter') {\n            play({ id: String(i) })\n\n            setSoundboard({\n                type: \"ADD_EMOJI\", payload: {\n                    emojiId,\n                    emojiNative,\n                    size: randomNumber(3, 2),\n                    left: randomNumber(100, 0),\n                    one: randomPosOrNeg(200, 50),\n                    two: randomPosOrNeg(200, 50),\n                    id: generate()\n                }\n            })\n        }\n    }\n\n    const handleCheckout = async () => {\n        let customerId\n\n        // Create customer Id if user doesn't have one\n        if (!user.customerId) {\n            const customer = await apiGetNewCustomerId()\n\n            customerId = customer.customerId\n        }\n\n        if (user.customerId) {\n            customerId = user.customerId\n        }\n\n        const { session } = await apiGetSession('5f3c2e2776180200046c9e68', customerId)\n\n        const sessionId = session.id\n\n        const stripe = await stripePromise\n\n        const { error } = await stripe.redirectToCheckout({\n            sessionId,\n        });\n\n        // Handle error\n        if (error) {\n            toast.error('Could not redirect to checkout.')\n        }\n\n    }\n\n    return (\n        <Fragment>\n            <MainLayout>\n                <MaxWidthSection>\n                    <HomepageHeader>\n                        <HomepageHeading>Chat with Sound</HomepageHeading>\n                        <HomepageSubHeading>Create custom soundboards and invite others\n            to play along in real time.</HomepageSubHeading>\n                        <Button s=\"l\" type=\"button\" onClick={() => user ? navigate('/soundboard/create') : navigate('/signup')}>Create a board</Button>\n                    </HomepageHeader>\n                </MaxWidthSection>\n                <SoundboardContainer gtm='2rem' gsm='2rem' gts=\"2rem\" gss=\"2rem\">\n                    {homepageSounds.map((sound, i) => (\n                        <EmojiButton key={sound.uid} innerRef={el => (buttonRefs.current[i] = el)}\n                            endl=\"span 2\"\n                            endm=\"span 2\"\n                            ends=\"span 3\"\n                            onClick={() => handlePlayClick(sound.emojiId, sound.emojiNative, i)}\n                            onKeyDown={e => handlePlayEnter(sound.emojiId, sound.emojiNative, e, i)}\n                        >\n                            <Emoji\n                                emoji={sound.emojiId}\n                                skin={Number(sound.emojiSkin)}\n                                size={64}\n                                native={true}\n                            />\n                        </EmojiButton>\n                    ))}\n                </SoundboardContainer>\n                <MaxWidthSection>\n                    <HomepageHeader margin=\"8rem 0\">\n                        <HomepageHeading>Do More with Pro</HomepageHeading>\n                        <HomepageSubHeading mb=\"0\">Unlock more fun for $14.99 a year.</HomepageSubHeading>\n                        <HomepageProContainer className=\"homepage-pro\">\n                            <HomepageProFeatures>\n                                <HomepageProFeature image={Sound} alt=\"sound icon\" text=\"Upload your own sounds\"></HomepageProFeature>\n                                <HomepageProFeature image={Infinity} alt=\"infinity icon\" text=\"Create unlimited soundboards\"></HomepageProFeature>\n                                <HomepageProFeature image={Key} alt=\"key icon\" text=\"Access all future releases\"></HomepageProFeature>\n                            </HomepageProFeatures>\n                        </HomepageProContainer>\n                        <Button s=\"l\" type=\"button\" onClick={() => user ? handleCheckout() : navigate('/signup', { state: { checkout: true } })}>Go Pro</Button>\n                    </HomepageHeader>\n                </MaxWidthSection>\n            </MainLayout>\n            <EmojiBubbleContainer>\n                {soundboard.emojis.emojiQueue.map(({ id, emojiId, emojiNative, size, left, one, two }) => (\n                    <AutoExpireHome key={id} id={id}>\n                        <EmojiHomeBubble\n                            label={emojiId}\n                            symbol={emojiNative}\n                            size={size}\n                            left={left}\n                            one={one}\n                            two={two}\n                        />\n                    </AutoExpireHome>\n                ))}\n            </EmojiBubbleContainer>\n        </Fragment>)\n}\n\nexport default Home\n","import styled from 'styled-components'\n\nconst AuthContainer = styled.div`\n    grid-column: 5 / span 6;\n\n    @media ${props => props.theme.breakpoints.m} {\n      grid-column: 2 / span 6;\n  }\n\n\n`\n\nexport default AuthContainer","import styled from 'styled-components'\n\nconst AuthWrapper = styled.div`\n    background-color: ${props => props.theme.colors.dark2};\n    padding: 2rem 1.5rem;\n    margin: 1rem 0 2rem 0;\n`\n\nexport default AuthWrapper","import styled from 'styled-components'\n\nconst TextError = styled.div`\n  color: ${props => props.theme.colors.pink1};\n  font-size: 0.9rem;\n  font-weight: 400;\n  margin: 0.5rem 0;\n `\n\nexport default TextError\n","import styled from 'styled-components'\n\nconst InputWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    label {\n        color: ${props => props.theme.colors.light2};\n        font-size: 0.9rem;\n        font-weight: 500;\n        margin-bottom: 0.5rem;\n    }\n\n`\n\nexport default InputWrapper","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\nimport InputWrapper from './InputWrapper'\n\nconst Input = props => {\n  const { label, name, ...rest } = props\n  return (\n    <InputWrapper>\n      <label htmlFor={name}>{label}</label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage component={TextError} name={name} />\n    </InputWrapper>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\nimport InputWrapper from './InputWrapper'\n\nconst TextArea = props => {\n  const { label, name, ...rest } = props\n  return (\n    <InputWrapper>\n      <label htmlFor={name}>{label}</label>\n      <Field as=\"textarea\" id={name} name={name} {...rest} />\n      <ErrorMessage component={TextError} name={name} />\n    </InputWrapper>\n  )\n}\n\nexport default TextArea\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\nimport InputWrapper from './InputWrapper'\n\nconst Select = props => {\n  const { label, name, options, ...rest } = props\n  return (\n    <InputWrapper>\n      <label htmlFor={name}>{label}</label>\n      <Field as=\"select\" id={name} name={name} {...rest}>\n        {options.map(option => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          )\n        })}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </InputWrapper>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport { Field } from 'formik'\nimport InputWrapper from './InputWrapper'\n\nconst Select = props => {\n  const { label, name, options, ...rest } = props\n  return (\n    <InputWrapper>\n      <label htmlFor={name}>{label}</label>\n      <Field as=\"select\" id={name} name={name} {...rest}>\n        {options.map(option => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          )\n        })}\n      </Field>\n    </InputWrapper>\n  )\n}\n\nexport default Select\n","import React, { Fragment } from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\nimport InputWrapper from './InputWrapper'\n\nconst Radio = props => {\n  const { label, name, options, ...rest } = props\n  return (\n    <InputWrapper>\n      <label>{label}</label>\n      <Field name={name} {...rest}>\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <Fragment key={option.key}>\n                <input\n                  type=\"radio\"\n                  id={option.value}\n                  value={option.value}\n                  checked={field.value === option.value}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </InputWrapper>\n  )\n}\n\nexport default Radio\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from './TextError'\n\nconst CheckboxGroup = props => {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className=\"form-control\">\n      <label>{label}</label>\n      <Field name={name}>\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type=\"checkbox\"\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value.includes(option.value)}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default CheckboxGroup\n","import React from 'react'\nimport DateView from 'react-datepicker'\nimport { Field, ErrorMessage } from 'formik'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport TextError from './TextError'\n\nconst DatePicker = props => {\n  const { label, name, ...rest } = props\n  return (\n    <div className=\"form-control\">\n      <label htmlFor={name}>{label}</label>\n      <Field name={name}>\n        {({ form, field }) => {\n          const { setFieldValue } = form\n          const { value } = field\n          return (\n            <DateView\n              id={name}\n              {...field}\n              {...rest}\n              selected={value}\n              onChange={val => setFieldValue(name, val)}\n            />\n          )\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport Input from './Input'\nimport TextArea from './TextArea'\nimport Select from './Select'\nimport SelectNe from './SelectNe'\nimport Radio from './Radio'\nimport CheckboxGroup from './CheckboxGroup'\nimport DatePicker from './DatePicker'\n\nconst FormikControl = props => {\n  const { control, ...rest } = props\n  switch (control) {\n    case 'input':\n      return <Input {...rest} />\n    case 'textarea':\n      return <TextArea {...rest} />\n    case 'select':\n      return <Select {...rest} />\n    case 'selectNe':\n      return <SelectNe {...rest} />\n    case 'radio':\n      return <Radio {...rest} />\n    case 'checkbox':\n      return <CheckboxGroup {...rest} />\n    case 'date':\n      return <DatePicker {...rest} />\n    default:\n      return null\n  }\n}\n\nexport default FormikControl\n","import styled from 'styled-components'\nimport FormikControl from '../Form/FormikControl'\n\nconst AuthText = styled(FormikControl)`\n    appearance: none;\n    background-color: transparent;\n    border: none;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1.2rem;\n    font-weight: 500;\n    color: ${props => props.theme.colors.light1};\n\n    &::placeholder {\n        color: ${props => props.theme.colors.light2};\n    }\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport default AuthText","import styled from 'styled-components'\n\nconst AuthTextWrapper = styled.div`\n    margin: ${props => props.margin ? props.margin : 0};\n`\n\nexport default AuthTextWrapper","import styled from 'styled-components'\n\nconst AuthTitle = styled.h2`\n    color: ${props => props.theme.colors.light1};\n    font-size: 1.5rem;\n    font-weight: 500;\n    margin: ${props => props.margin ? props.margin : 0};\n`\n\nexport default AuthTitle","import styled from 'styled-components'\nimport { Link } from '@reach/router'\n\nconst ForgotPasswordLink = styled(Link)`\n    display: block;\n    color: ${props => props.theme.colors.light2};\n    font-size: 0.9rem;\n    font-weight: 400;\n    text-decoration: none;\n    margin: 2rem 0 0 0;\n    transition: ${props => props.theme.animations.link};\n\n    &:hover {\n        color: ${props => props.theme.colors.blue1};\n    }\n`\n\nexport default ForgotPasswordLink","import React, { Fragment } from 'react'\nimport { navigate, useLocation } from '@reach/router'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { toast } from 'react-toastify';\nimport { loadStripe } from '@stripe/stripe-js';\n\nimport { useAuth } from '../../hooks/useAuth'\nimport { apiGetSession } from '../../api/Payment'\nimport MainLayout from '../Layout/MainLayout'\nimport AuthContainer from './AuthContainer'\nimport AuthWrapper from './AuthWrapper'\nimport Button from '../Button/Button'\nimport AuthText from './AuthText'\nimport AuthTextWrapper from './AuthTextWrapper'\nimport AuthTitle from './AuthTitle'\nimport ForgotPasswordLink from './ForgotPasswordLink'\n\nconst stripePromise = loadStripe('pk_live_51HFi8kD0C39kKgHjE5ZXplCTM9AUi708a861j9pZRlHKmXLbC4pk9jvFxQF3wV8TrThHUq5ECOLwz8Cfn20lVbsO00XrQv4i9Y')\n\nconst SignupForm = () => {\n  const { signup } = useAuth()\n\n  const location = useLocation()\n\n  const initialData = {\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirm: '',\n  }\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string()\n      .required('Required')\n      .matches(\n        /^(?=.{1,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$/,\n        'Invalid username',\n      )\n      .test(/* name */ 'unique-username',  /* failure message */ 'Username already in use', function (value) {\n        return fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/usernameAvailable`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            username: value\n          }),\n        })\n          .then(res => res.json())\n          .then(data => data.data.available)\n      })\n    ,\n    email: Yup.string()\n      .required('Required')\n      .matches(\n        /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/,\n        'Invalid email',\n      )\n      .test(/* name */ 'unique-email',  /* failure message */ 'Email already in use', function (value) {\n        return fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/emailAvailable`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            email: value\n          }),\n        })\n          .then(res => res.json())\n          .then(data => data.data.available)\n      })\n    ,\n    password: Yup.string()\n      .required('Required')\n      .matches(\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\n        'Password must be at least 8 characters and include 1 of each: lowercase letter, uppercase letter, number, and symbol',\n      ),\n    passwordConfirm: Yup.string()\n      .required('Required')\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  })\n\n\n  const handleCheckout = async () => {\n    const { session } = await apiGetSession('5f3c2e2776180200046c9e68')\n\n    const sessionId = session.id\n\n    const stripe = await stripePromise\n\n    const { error } = await stripe.redirectToCheckout({\n      sessionId,\n    });\n\n    // Handle error\n    if (error) {\n      console.log(error.message)\n    }\n\n  }\n\n  const onSubmit = async data => {\n    try {\n      const res = await signup(data)\n\n      if (res.status === 'success' && !location.state.checkout) {\n        navigate('/dashboard')\n      }\n\n      if (res.status === 'success' && location.state.checkout) {\n        handleCheckout()\n      }\n\n\n      if (res.status === 'fail' || res.status === 'error') {\n        toast.error('Invalid credentials.')\n      }\n\n    } catch (error) {\n      toast.error('Invalid credentials.')\n    }\n  }\n\n  return (\n    <MainLayout>\n      <Formik\n        initialValues={initialData}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        validateOnBlur={true}\n        validateOnChange={false}\n      >\n        {({ isValid, isSubmitting }) => (\n          <Fragment>\n            <AuthContainer>\n              <AuthTitle margin=\"2rem 0 0 0\">Signup</AuthTitle>\n              <AuthWrapper>\n                <Form>\n                  <AuthTextWrapper>\n                    <AuthText\n                      control=\"input\"\n                      type=\"text\"\n                      label=\"Username\"\n                      name=\"username\"\n                      placeholder=\"Enter your username\"\n                      autoComplete=\"off\"\n                    />\n                  </AuthTextWrapper>\n                  <AuthTextWrapper margin=\"2rem 0 0 0\">\n                    <AuthText\n                      control=\"input\"\n                      type=\"text\"\n                      label=\"Email\"\n                      name=\"email\"\n                      placeholder=\"Enter your email\"\n                      autoComplete=\"on\"\n                    />\n                  </AuthTextWrapper>\n                  <AuthTextWrapper margin=\"2rem 0 0 0\">\n                    <AuthText\n                      control=\"input\"\n                      type=\"password\"\n                      label=\"Password\"\n                      name=\"password\"\n                      placeholder=\"Enter your password\"\n                      autoComplete=\"off\"\n                    />\n                  </AuthTextWrapper>\n                  <AuthTextWrapper margin=\"2rem 0 1.5rem 0\">\n                    <AuthText\n                      control=\"input\"\n                      type=\"password\"\n                      label=\"Confirm Password\"\n                      name=\"passwordConfirm\"\n                      placeholder=\"Confirm Password\"\n                      autoComplete=\"off\"\n                    />\n                  </AuthTextWrapper>\n                  <Button size=\"s\" disabled={!isValid || isSubmitting} type=\"submit\">\n                    Signup\n                  </Button>\n                </Form>\n                <ForgotPasswordLink to=\"/login\">Already a user? Login.</ForgotPasswordLink>\n              </AuthWrapper>\n            </AuthContainer>\n          </Fragment>\n        )}\n      </Formik>\n    </MainLayout>\n  )\n}\n\nexport default SignupForm","import React, { Fragment } from 'react'\nimport { navigate } from '@reach/router'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { toast } from 'react-toastify';\n\nimport { useAuth } from '../../hooks/useAuth'\nimport MainLayout from '../Layout/MainLayout'\nimport AuthContainer from './AuthContainer'\nimport AuthWrapper from './AuthWrapper'\nimport Button from '../Button/Button'\nimport AuthText from './AuthText'\nimport AuthTextWrapper from './AuthTextWrapper'\nimport AuthTitle from './AuthTitle'\nimport ForgotPasswordLink from './ForgotPasswordLink'\n\nconst LoginForm = () => {\n  const { login } = useAuth()\n\n  const initialData = {\n    email: '',\n    password: '',\n  }\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required('Required'),\n    password: Yup.string().required('Required'),\n  })\n\n  const onSubmit = async data => {\n    try {\n      const res = await login(data)\n\n      if (res.status === 'success') {\n        navigate('/dashboard')\n      }\n\n      if (res.status === 'fail' || res.status === 'error') {\n        toast.error('Invalid credentials.')\n      }\n\n    } catch (error) {\n      toast.error('Invalid credentials.')\n    }\n  }\n\n  return (\n    <MainLayout>\n      <Formik\n        initialValues={initialData}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ isValid, isSubmitting }) => (\n          <Fragment>\n            <AuthContainer>\n              <AuthTitle margin=\"2rem 0 0 0\">Login</AuthTitle>\n              <AuthWrapper>\n                <Form>\n                  <AuthTextWrapper>\n                    <AuthText\n                      control=\"input\"\n                      type=\"text\"\n                      label=\"Email\"\n                      name=\"email\"\n                      placeholder=\"Enter your email\"\n                      autoComplete=\"on\"\n                    />\n                  </AuthTextWrapper>\n                  <AuthTextWrapper margin=\"2rem 0 1.5rem 0\">\n                    <AuthText\n                      control=\"input\"\n                      type=\"password\"\n                      label=\"Password\"\n                      name=\"password\"\n                      placeholder=\"Enter your password\"\n                      autoComplete=\"off\"\n                    />\n                  </AuthTextWrapper>\n                  <Button size=\"s\" disabled={!isValid || isSubmitting} type=\"submit\">\n                    Login\n                  </Button>\n                </Form>\n                <ForgotPasswordLink to=\"/forgot-password\">Forgot password</ForgotPasswordLink>\n              </AuthWrapper>\n            </AuthContainer>\n          </Fragment>\n        )}\n      </Formik>\n    </MainLayout>\n  )\n}\n\nexport default LoginForm\n","import styled from 'styled-components'\n\nconst LoadingSection = styled.div`\n    position: absolute;\n    top: 30%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n\nexport default LoadingSection","import React from 'react'\nimport Loader from '../../images/loader.svg'\nimport LoadingSection from './LoadingSection'\n\nconst Loading = () => {\n    return (\n        <LoadingSection>\n            <img src={Loader} alt=\"Loader\" height=\"100\" />\n        </LoadingSection>\n    )\n}\n\nexport default Loading\n","import styled from 'styled-components'\n\nconst PrivacyContainer = styled.div`\n    color: ${props => props.theme.colors.light1};\n    margin: 4rem 0;\n    grid-column: 3 / span 8;\n\n    p,li,h1,h2,h3,h4,h5,h6 {\n        margin: 2rem 0;\n    }\n\n    p {\n        line-height: 150%;\n    }\n\n    p br {\n        content: \"\";\n        display: block;\n        margin: 2em;\n    }\n\n    a {\n        color: ${props => props.theme.colors.blue1};\n    }\n\n    @media ${props => props.theme.breakpoints.m} {\n    grid-column: 1 / span 6;\n  }\n\n`\n\nexport default PrivacyContainer","import React, { Fragment, useEffect, useState } from 'react'\nimport parse from 'html-react-parser';\n\nimport MainLayout from '../Layout/MainLayout'\nimport MaxWidthSection from '../Layout/MaxWidthSection'\nimport Loading from '../Loading/Loading'\nimport PrivacyContainer from './PrivacyContainer'\n\nconst Privacy = () => {\n\n    const [policyContent, setPolicyContent] = useState(null)\n\n    useEffect(() => {\n        let policy\n        const getPolicy = async () => {\n            policy = await fetch('https://www.iubenda.com/api/privacy-policy/27052442')\n            const policyDetails = await policy.json()\n            setPolicyContent(policyDetails.content)\n        }\n\n        getPolicy()\n    }, [])\n\n    if (!policyContent) {\n        return (\n            <Fragment>\n                <MainLayout>\n                    <Loading />\n                </MainLayout>\n            </Fragment>\n        )\n    }\n\n    return (\n        <MainLayout>\n            <MaxWidthSection>\n                <PrivacyContainer>\n                    {parse(policyContent)}\n                </PrivacyContainer>\n            </MaxWidthSection>\n        </MainLayout>\n    )\n\n}\n\nexport default Privacy\n","import React, { Fragment, useEffect, useState } from 'react'\nimport parse from 'html-react-parser';\n\nimport MainLayout from '../Layout/MainLayout'\nimport MaxWidthSection from '../Layout/MaxWidthSection'\nimport Loading from '../Loading/Loading'\nimport PrivacyContainer from '../Privacy/PrivacyContainer'\n\nconst Privacy = () => {\n\n    const [policyContent, setPolicyContent] = useState(null)\n\n    useEffect(() => {\n        let policy\n        const getPolicy = async () => {\n            policy = await fetch('https://www.iubenda.com/api/terms-and-conditions/27052442')\n            const policyDetails = await policy.json()\n            setPolicyContent(policyDetails.content)\n        }\n\n        getPolicy()\n    }, [])\n\n    if (!policyContent) {\n        return (\n            <Fragment>\n                <MainLayout>\n                    <Loading />\n                </MainLayout>\n            </Fragment>\n        )\n    }\n\n    return (\n        <MainLayout>\n            <MaxWidthSection>\n                <PrivacyContainer>\n                    {parse(policyContent)}\n                </PrivacyContainer>\n            </MaxWidthSection>\n        </MainLayout>\n    )\n\n}\n\nexport default Privacy\n","import React, { Fragment } from 'react'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { toast } from 'react-toastify';\n\nimport { useAuth } from '../../hooks/useAuth'\nimport MainLayout from '../Layout/MainLayout'\nimport Button from '../Button/Button'\nimport AuthContainer from './AuthContainer'\nimport AuthWrapper from './AuthWrapper'\nimport AuthText from './AuthText'\nimport AuthTextWrapper from './AuthTextWrapper'\nimport AuthTitle from './AuthTitle'\n\nconst ForgotPassword = () => {\n    const { forgotPassword } = useAuth()\n\n    const initialData = {\n        email: '',\n    }\n\n    const validationSchema = Yup.object().shape({\n        email: Yup.string().required('Required'),\n    })\n\n    const onSubmit = async data => {\n        try {\n            const res = await forgotPassword(data)\n\n            if (res.status === 'success') {\n                toast('Check your email to complete! 💌')\n            }\n\n            if (res.status === 'fail') {\n                toast.error('Invalid request.')\n            }\n        } catch (error) {\n            toast.error('Could not send email.')\n        }\n    }\n\n    return (\n        <MainLayout>\n            <Formik\n                initialValues={initialData}\n                validationSchema={validationSchema}\n                onSubmit={onSubmit}\n            >\n                {({ isValid, isSubmitting }) => (\n                    <Fragment>\n                        <AuthContainer>\n                            <AuthTitle margin=\"2rem 0 0 0\">Forgot Password</AuthTitle>\n                            <AuthWrapper>\n                                <Form>\n                                    <AuthTextWrapper margin=\"0 0 1.5rem 0\">\n                                        <AuthText\n                                            control=\"input\"\n                                            type=\"text\"\n                                            label=\"Email\"\n                                            name=\"email\"\n                                            placeholder=\"Enter your email\"\n                                            autoComplete=\"on\"\n                                        />\n                                    </AuthTextWrapper>\n                                    <Button size=\"s\" disabled={!isValid || isSubmitting} type=\"submit\">\n                                        Submit\n                                </Button>\n                                </Form>\n                            </AuthWrapper>\n                        </AuthContainer>\n                    </Fragment>\n\n                )}\n            </Formik>\n        </MainLayout>\n    )\n}\n\nexport default ForgotPassword\n","import styled from 'styled-components'\n\nconst ErrorSection = styled.div`\n    position: absolute;\n    max-width: 25rem;\n    top: 30%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n`\n\nexport default ErrorSection","import styled from 'styled-components'\n\nconst ErrorTitle = styled.h1`\n    color: ${props => props.theme.colors.light1};\n    font-size: 2.25rem;\n    font-weight: 500;\n`\n\nexport default ErrorTitle","import React from 'react'\nimport { Emoji } from 'emoji-mart'\nimport ErrorSection from './ErrorSection'\nimport ErrorTitle from './ErrorTitle'\n\nconst Error = () => {\n    return (\n        <ErrorSection>\n            <Emoji\n                emoji='tired_face'\n                skin={1}\n                size={64}\n                native={true}\n            />\n            <ErrorTitle>There was an error processing your request.</ErrorTitle>\n        </ErrorSection>\n    )\n}\n\nexport default Error","import React, { Fragment, useState, useEffect } from 'react'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { navigate, useLocation } from '@reach/router'\nimport { parse } from \"query-string\"\nimport { toast } from 'react-toastify';\n\nimport { useAuth } from '../../hooks/useAuth'\nimport MainLayout from '../Layout/MainLayout'\nimport Button from '../Button/Button'\nimport AuthContainer from './AuthContainer'\nimport AuthWrapper from './AuthWrapper'\nimport AuthText from './AuthText'\nimport AuthTextWrapper from './AuthTextWrapper'\nimport Loading from '../Loading/Loading'\nimport Error from '../Error/Error'\nimport AuthTitle from './AuthTitle'\n\nconst ResetPassword = () => {\n    const { resetPassword } = useAuth()\n\n    const [isError, setIsError] = useState(false)\n\n    const [initialData, setInitialData] = useState(null)\n\n    const location = useLocation()\n\n    const searchParams = parse(location.search)\n\n    // Check if token is in props and pass in\n    useEffect(() => {\n        // Handle no token\n        if (!searchParams.token) {\n            return setIsError(true)\n        }\n\n        setInitialData({\n            token: searchParams.token,\n            password: '',\n            passwordConfirm: '',\n        })\n\n        return () => {\n            setInitialData({\n                token: '',\n                password: '',\n                passwordConfirm: '',\n            })\n        }\n\n    }, [searchParams.token])\n\n    const validationSchema = Yup.object().shape({\n        password: Yup.string()\n            .required('Required')\n            .matches(\n                /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\n                'Password must be at least 8 characters and include 1 of each: lowercase letter, uppercase letter, number, and symbol',\n            ),\n        passwordConfirm: Yup.string()\n            .required('Required')\n            .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n    })\n\n    const onSubmit = async data => {\n        try {\n            const res = await resetPassword(data)\n\n            if (res.status === 'success') {\n                toast('Password updated! 🥳')\n                navigate('/login')\n            }\n\n            if (res.status === 'fail') {\n                toast.error('Could not change password.')\n            }\n        } catch (error) {\n            toast.error('Invalid credentials.')\n        }\n    }\n\n    if (isError) {\n        return (\n            <Fragment>\n                <MainLayout>\n                    <Error />\n                </MainLayout>\n            </Fragment>\n        )\n    }\n\n    if (!initialData) {\n        return (\n            <Fragment>\n                <MainLayout>\n                    <Loading />\n                </MainLayout>\n            </Fragment>\n        )\n    }\n\n    if (initialData) {\n        return (\n            <MainLayout>\n                <Formik\n                    initialValues={initialData}\n                    validationSchema={validationSchema}\n                    onSubmit={onSubmit}\n                >\n                    {({ isValid, isSubmitting }) => (\n                        <Fragment>\n                            <AuthContainer>\n                                <AuthTitle margin=\"2rem 0 0 0\">Reset Password</AuthTitle>\n                                <AuthWrapper>\n                                    <Form>\n                                        <AuthTextWrapper>\n                                            <AuthText\n                                                control=\"input\"\n                                                type=\"password\"\n                                                label=\"Password\"\n                                                name=\"password\"\n                                                placeholder=\"Enter your password\"\n                                            />\n                                        </AuthTextWrapper>\n                                        <AuthTextWrapper margin=\"2rem 0 1.5rem 0\">\n                                            <AuthText\n                                                control=\"input\"\n                                                type=\"password\"\n                                                label=\"Confirm Password\"\n                                                name=\"passwordConfirm\"\n                                                placeholder=\"Confirm your password\"\n                                            />\n                                        </AuthTextWrapper>\n                                        <Button size=\"s\" disabled={!isValid || isSubmitting} type=\"submit\">\n                                            Reset\n                                        </Button>\n                                    </Form>\n                                </AuthWrapper>\n                            </AuthContainer>\n                        </Fragment>\n                    )}\n                </Formik>\n            </MainLayout>\n        )\n    }\n}\n\nexport default ResetPassword\n","import React, { Fragment, useEffect } from 'react'\nimport { Redirect } from '@reach/router'\n\nimport { useAuth } from '../../hooks/useAuth'\nimport MainLayout from '../Layout/MainLayout'\nimport Loading from '../Loading/Loading'\n\nconst PrivateRoute = ({ as: Component, roles, ...props }) => {\n  const { user, isAuthenticating, isLoggedIn } = useAuth()\n\n  // Check if logged in\n  useEffect(() => {\n    const runIsLoggedIn = async () => {\n      await isLoggedIn()\n    }\n\n    runIsLoggedIn()\n  }, [])\n\n  if (isAuthenticating) {\n    return (\n      <Fragment>\n        <MainLayout>\n          <Loading />\n        </MainLayout>\n      </Fragment>\n    )\n  }\n\n  return (\n    <>\n      {user ? (\n        <Component {...props} />\n      ) : (\n        <Redirect from={props.path} to=\"/login\" noThrow />\n      )}\n    </>\n  )\n}\n\nexport default PrivateRoute\n","const gcsPath = 'https://storage.googleapis.com/wham-uploads/defaults/'\n\nconst defaultSounds = [\n    { key: 'Select a sound', value: '' },\n    { key: 'Air Horn', value: `${gcsPath}airhorn.mp3` },\n    { key: 'Award', value: `${gcsPath}award.mp3` },\n    { key: 'Camera', value: `${gcsPath}camera.mp3` },\n    { key: 'Cat', value: `${gcsPath}cat.mp3` },\n    { key: 'Cha-Ching', value: `${gcsPath}cha-ching.mp3` },\n    { key: 'Chicken', value: `${gcsPath}chicken.mp3` },\n    { key: 'Clapping', value: `${gcsPath}clapping.mp3` },\n    { key: 'Crickets', value: `${gcsPath}crickets.mp3` },\n    { key: 'Crowd Laughing', value: `${gcsPath}crowd-laughing.mp3` },\n    { key: 'Crowd Oooo', value: `${gcsPath}crowd-oooo.mp3` },\n    { key: 'Crowd Sad', value: `${gcsPath}crowd-sad.mp3` },\n    { key: 'Crowd Wow', value: `${gcsPath}crowd-wow.mp3` },\n    { key: 'Crowd Yay', value: `${gcsPath}crowd-yay.mp3` },\n    { key: 'Dog', value: `${gcsPath}dog.mp3` },\n    { key: 'Dolphin', value: `${gcsPath}dolphin.mp3` },\n    { key: 'Duck', value: `${gcsPath}duck.mp3` },\n    { key: 'Error', value: `${gcsPath}error.mp3` },\n    { key: 'Gasp', value: `${gcsPath}gasp.mp3` },\n    { key: 'Grr', value: `${gcsPath}grr.mp3` },\n    { key: 'Grunt', value: `${gcsPath}grunt.mp3` },\n    { key: 'Huh', value: `${gcsPath}huh.mp3` },\n    { key: 'Karate Chop', value: `${gcsPath}karate-chop.mp3` },\n    { key: 'Kids Cheer', value: `${gcsPath}kids-cheer.mp3` },\n    { key: 'Kids Cool', value: `${gcsPath}kids-cool.mp3` },\n    { key: 'Kids Ew', value: `${gcsPath}kids-ew.mp3` },\n    { key: 'Kids Wow', value: `${gcsPath}kids-wow.mp3` },\n    { key: 'Magic', value: `${gcsPath}magic.mp3` },\n    { key: 'Mmmm', value: `${gcsPath}mmmm.mp3` },\n    { key: 'Monkey', value: `${gcsPath}monkey.mp3` },\n    { key: 'Ouch', value: `${gcsPath}ouch.mp3` },\n    { key: 'Yeah', value: `${gcsPath}yeah.mp3` },\n    { key: 'Yee-haw', value: `${gcsPath}yeehaw.mp3` },\n]\n\nexport default defaultSounds","import { serialize } from 'object-to-formdata'\n\nexport const apiUploadSounds = async data => {\n  const opts = { indices: true }\n\n  const formData = serialize(data, opts)\n\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/soundboards/upload`, {\n      method: 'POST',\n      credentials: 'include',\n      body: formData,\n    })\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiDeleteSound = async filename => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/soundboards/delete`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        filename: filename,\n      }),\n    })\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiCreateSoundboard = async data => {\n  const body = JSON.stringify({\n    data,\n  })\n\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/soundboards`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: body,\n    })\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiGetSoundboard = async id => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/soundboards/${id}`, {\n      method: 'GET',\n      credentials: 'include',\n    })\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiGetMySoundboard = async id => {\n  try {\n    const res = await fetch(\n      `${process.env.REACT_APP_API_ENDPOINT}/soundboards/my/${id}`,\n      {\n        method: 'GET',\n        credentials: 'include',\n      },\n    )\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiGetAllMySoundboards = async (page, limit) => {\n  try {\n    const res = await fetch(\n      `${process.env.REACT_APP_API_ENDPOINT}/soundboards/mine?page=${page}&limit=10`,\n      {\n        method: 'GET',\n        credentials: 'include',\n      },\n    )\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport const apiUpdateMySoundboard = async (data, id) => {\n  const body = JSON.stringify({\n    data,\n  })\n\n  try {\n    const res = await fetch(\n      `${process.env.REACT_APP_API_ENDPOINT}/soundboards/my/${id}`,\n      {\n        method: 'PATCH',\n        credentials: 'include',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: body,\n      },\n    )\n\n    const data = await res.json()\n\n    return data\n  } catch (error) {\n    return error\n  }\n}\n","import styled from 'styled-components'\nimport FormikControl from '../Form/FormikControl'\n\nconst EditorTitle = styled(FormikControl)`\n    appearance: none;\n    background-color: transparent;\n    border: none;\n    font-family: 'Roboto', sans-serif;\n    font-size: 3rem;\n    font-weight: 500;\n    color: ${props => props.theme.colors.light1};\n    margin-bottom: 2rem;\n\n    &::placeholder {\n        color: ${props => props.theme.colors.light2};\n    }\n\n    &:focus {\n        outline: none;\n    }\n\n`\n\nexport default EditorTitle","import styled from \"styled-components\";\nimport MaxWidthSection from '../Layout/MaxWidthSection'\n\nconst EditorWrapper = styled(MaxWidthSection)`\n    margin: ${props => props.theme.spacings.m} 0;\n`\n\nexport default EditorWrapper","import styled from 'styled-components'\n\nconst EditorContainer = styled.div`\n    grid-column: 3 / span 8;\n\n    @media ${props => props.theme.breakpoints.m} {\n      grid-column: 1 / span 6;\n  }\n\n\n`\n\nexport default EditorContainer","import styled from 'styled-components'\n\nconst EditorSectionWrapper = styled.div`\n    background-color: ${props => props.theme.colors.dark2};\n    padding: 2rem 1.5rem;\n`\n\nexport default EditorSectionWrapper","import React, { Fragment } from 'react'\nimport EditorSectionWrapper from './EditorSectionWrapper'\n\nconst EditorSection = ({ children }) => {\n    return (\n        <Fragment>\n            <EditorSectionWrapper>\n                {children}\n            </EditorSectionWrapper>\n        </Fragment>\n    )\n}\n\nexport default EditorSection\n","import styled from 'styled-components'\n\nconst EditorSectionTitle = styled.h2`\n    color: ${props => props.theme.colors.light1};\n    font-size: 1.5rem;\n    font-weight: 500;\n    margin: ${props => props.margin ? props.margin : 0};\n`\n\nexport default EditorSectionTitle","import styled from 'styled-components'\nimport FormikControl from '../Form/FormikControl'\n\nconst EditorSelect = styled(FormikControl)`\n    position: relative; \n    background-color: transparent;\n    border: none;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1.2rem;\n    font-weight: 500;\n    color: ${props => props.theme.colors.light1};\n    cursor: pointer;\n    width: fit-content;\n    padding-right: 1rem;\n\n    &:focus {\n        outline: none;\n    }\n\n`\n\nexport default EditorSelect","import styled from 'styled-components'\n\nconst SoundSection = styled.div`\n  position: relative;\n  padding: 2rem 1.5rem;\n  background-color: ${props => props.theme.colors.dark2};\n  margin-bottom: 2rem;\n\n`\n\nexport default SoundSection","import styled from 'styled-components'\n\nconst SettingsSection = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n\n  button {\n    margin-left: auto;\n  }\n\n`\n\nexport default SettingsSection","import styled from 'styled-components'\n\nconst EditButtons = styled.div`\nposition: absolute;\ntop: 2rem;\nright: 1.5rem;\n\ni {\n  margin-left: 0.5rem;\n}\n`\n\nexport default EditButtons","import styled from 'styled-components'\n\nconst EditorToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 2rem;\n\n  p {\n    color: ${props => props.theme.colors.light1};\n    font-size: 0.9rem;\n    font-weight: 500;\n    margin-left: 1rem;\n  }\n\n`\n\nexport default EditorToggleWrapper","import styled from 'styled-components'\n\nconst EditorToggle = styled.div`\n  position: relative;\n  background-color: ${props => props.theme.colors.dark1};\n  height: 1.5rem;\n  width: 3rem;\n  border-radius: 3rem;\n  cursor: pointer;\n\n  &::before {\n    content: '';\n    position: absolute;\n    background-color: ${props => props.theme.colors.light2};\n    width: 1.5rem;\n    height: 1.5rem;\n    border-radius: 1.5rem;\n    transition: ${props => props.theme.animations.toggle};\n  }\n\n  &.active::before {\n    background-color: ${props => props.theme.colors.blue1};\n    transform: translateX(1.5rem);\n  }\n\n`\n\nexport default EditorToggle","import styled from 'styled-components'\n\nconst EditorFieldWrapper = styled.div`\n    margin: ${props => props.margin ? props.margin : \"0 0 0 0\"};\n`\n\nexport default EditorFieldWrapper","import styled from 'styled-components'\n\nconst UploadButton = styled.label`\n    cursor: pointer;\n    border: none;\n    background-color: ${props => props.theme.colors.blue1};\n    color: ${props => props.theme.colors.light1};\n    box-shadow: 0.25rem 0.25rem 0px 0px ${props => props.theme.colors.pink1};\n    display: inline-block;\n    font-weight: 700;\n    font-size: 0.75rem;\n    padding: 0.5rem 1rem;\n    height: fit-content;\n    margin-right: 1rem;\n    transition: ${props => props.theme.animations.button};\n\n    &:hover {\n        transform: translate(0.125rem, 0.125rem);\n        box-shadow: 0rem 0rem 0px 0px ${props => props.theme.colors.pink1};\n    }\n\n`\n\nexport default UploadButton","import styled from 'styled-components'\n\nconst EditorUploadWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 2rem;\n`\n\nexport default EditorUploadWrapper","import styled from 'styled-components'\n\nconst EditorPlayWrapper = styled.div`\n    display: flex;\n    margin-bottom: 2rem;\n\n    button:nth-child(2) {\n        margin-left: 1.5rem;\n    }\n\n`\n\nexport default EditorPlayWrapper","import styled from 'styled-components'\n\nconst EditorPlayWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    label {\n        color: ${props => props.theme.colors.light2};\n        font-size: 0.9rem;\n        font-weight: 500;\n        margin-bottom: 0.5rem;\n    }\n\n`\n\nexport default EditorPlayWrapper","import styled from 'styled-components'\n\nconst EditorEmojiSelect = styled.div`\n    display: flex;\n    align-items: center;\n\n    select {\n        position: relative; \n        background-color: transparent;\n        border: none;\n        font-family: 'Roboto', sans-serif;\n        font-size: 1.2rem;\n        font-weight: 500;\n        color: ${props => props.theme.colors.light1};\n        cursor: pointer;\n        width: fit-content;\n        margin-left: 0.5rem;\n    }\n\n    select:focus {\n        outline: none;\n\n    }\n\n`\n\nexport default EditorEmojiSelect","import React, { useState, useEffect, Fragment } from 'react'\nimport { navigate } from '@reach/router'\nimport { generate } from 'shortid'\nimport { Formik, Form, FieldArray, ErrorMessage } from 'formik'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport * as Yup from 'yup'\nimport 'emoji-mart/css/emoji-mart.css'\nimport { Picker, Emoji } from 'emoji-mart'\nimport Sound from 'react-sound'\nimport { toast } from 'react-toastify';\n\nimport defaultSounds from '../../sounds/defaultSounds'\nimport { useAuth } from '../../hooks/useAuth'\nimport {\n  apiCreateSoundboard,\n  apiUploadSounds,\n  apiGetMySoundboard,\n  apiUpdateMySoundboard,\n} from '../../api/Soundboard'\nimport TextError from '../Form/TextError'\nimport EditorTitle from './EditorTitle'\nimport MainLayout from '../Layout/MainLayout'\nimport EditorWrapper from '../Editor/EditorWrapper'\nimport EditorContainer from './EditorContainer'\nimport EditorSection from './EditorSection'\nimport EditorSectionTitle from './EditorSectionTitle'\nimport EditorSelect from './EditorSelect'\nimport Button from '../Button/Button'\nimport Loading from '../Loading/Loading';\nimport SoundSection from './SoundSection'\nimport SettingsSection from './SettingsSection'\nimport EditButtons from './EditButtons'\nimport EditorToggleWrapper from './EditorToggleWrapper'\nimport EditorToggle from './EditorToggle'\nimport EditorFieldWrapper from './EditorFieldWrapper'\nimport UploadButton from './UploadButton'\nimport EditorUploadWrapper from './EditorUploadWrapper'\nimport EditorPlayWrapper from './EditorPlayWrapper'\nimport EditorEmojiWrapper from './EditorEmojiWrapper'\nimport EditorEmojiSelect from './EditorEmojiSelect'\nimport Loader from '../../images/loader.svg'\nimport Error from '../Error/Error'\n\nconst SoundboardEditor = props => {\n\n  const [isError, setIsError] = useState(false)\n\n  const [initialData, setInitialData] = useState(null)\n\n  const [emojiOpen, setEmojiOpen] = useState([])\n\n  const [customSoundIds, setCustomSoundIds] = useState([])\n\n  const [playingSounds, setPlayingSounds] = useState([])\n\n  const [uploadingSounds, setUploadingSounds] = useState([])\n\n  const { user } = useAuth()\n\n  // Stop sound debug\n  useEffect(() => {\n    window.soundManager.setup({ debugMode: false })\n  }, [])\n\n  // Load data for form\n  useEffect(() => {\n    // Define async function and call it later\n    const fetchData = async sbId => {\n      try {\n        const data = await apiGetMySoundboard(sbId)\n\n        // If success set data\n        if (data.status === 'success') {\n          const soundboard = data.data.soundboard\n\n          // Create new array of sounds from data\n          let sounds = Array.from(soundboard.sounds);\n          let customSoundIds = []\n\n          // Find all the custom sounds\n          const customSounds = sounds.filter(sound => sound.custom)\n\n          // Map custom sound Ids if exist\n          if (customSounds.length > 0) {\n            customSoundIds = customSounds.map(sound => sound.uid)\n            // Add to customSound state array\n            setCustomSoundIds(customSoundIds)\n          }\n\n          return setInitialData({\n            title: soundboard.title,\n            status: soundboard.status,\n            sounds: soundboard.sounds,\n          })\n        }\n\n        // If error set error\n        setIsError(true)\n\n      } catch (error) {\n        // If error set error\n        setIsError(true)\n      }\n    }\n\n    // If soundboard ID is passed in get the data\n    if (props.sbId) {\n      fetchData(props.sbId)\n    }\n\n    if (!props.sbId) {\n      // Else set initial values to empty\n      setInitialData({\n        title: '',\n        status: 'drafted',\n        sounds: [\n          {\n            title: '',\n            audio: '',\n            emojiId: 'star-struck',\n            emojiSkin: 1,\n            emojiNative: '🤩',\n            uid: generate(),\n            audioFile: '',\n            custom: false,\n          },\n        ],\n      })\n    }\n  }, [])\n\n  const statusOptions = [\n    { key: 'Drafted', value: 'drafted' },\n    { key: 'Published', value: 'published' },\n    { key: 'Archived', value: 'archived' },\n  ]\n\n  const soundOptions = defaultSounds\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Required'),\n    sounds: Yup.array().of(\n      Yup.object().shape({\n        audio: Yup.string().required('Required'),\n        emojiId: Yup.string().required('Required'),\n      }),\n    ),\n    // .required('Must have friends') // these constraints are shown if and only if inner constraints are satisfied\n    // .min(3, 'Minimum of 3 friends'),\n  })\n\n  const notifyCreateSuccess = () => {\n    toast('Soundboard created! 🥳')\n  }\n\n  const notifyUpdateSuccess = () => {\n    toast('Soundboard updated! 🥳')\n  }\n\n  const notifyUpdateError = () => {\n    toast.error('Could not update soundboard.')\n  }\n\n  const notifyCreateError = () => {\n    toast.error('Could not create soundboard.')\n  }\n\n  const onSubmit = async data => {\n    // Edit post if id passed in\n    if (props.sbId) {\n      try {\n        const res = await apiUpdateMySoundboard(data, props.sbId)\n\n        if (res.status === 'success') {\n          notifyUpdateSuccess()\n        }\n\n        if (res.status === 'fail') {\n          notifyUpdateError()\n        }\n      } catch (error) {\n        notifyUpdateError()\n      }\n    }\n\n    // Create new post if no id passed in\n    if (!props.sbId) {\n      try {\n        const res = await apiCreateSoundboard(data)\n\n        if (res.status === 'success') {\n          // Navigate to edit page\n          navigate(`/soundboard/edit/${res.data.soundboard.id}`)\n          notifyCreateSuccess()\n        }\n\n        if (res.status === 'fail') {\n          notifyCreateError()\n        }\n\n      } catch (error) {\n        notifyCreateError()\n      }\n    }\n  }\n\n  const handleUploadAudio = async (\n    e,\n    index,\n    uid,\n    setFieldValue,\n    setFieldError,\n  ) => {\n    // Add file to be upload status\n    setUploadingSounds([...uploadingSounds, uid])\n    try {\n      const res = await apiUploadSounds(e.currentTarget.files[0])\n\n      if (res.status !== 'success') {\n        setFieldError(`sounds[${index}].audio`, 'Error uploading file')\n      }\n\n      if (res.status === 'success') {\n        setFieldValue(`sounds[${index}].audio`, res.data.gcsUrl)\n      }\n    } catch (error) {\n      setFieldError(`sounds[${index}].audio`, 'Error uploading file')\n    }\n\n    // Reset audio file field\n    setFieldValue(`sounds[${index}].audioFile`, '')\n\n    // Remove uid from uploading\n    const newArray = uploadingSounds.filter(sound => sound !== uid)\n    setUploadingSounds(newArray)\n  }\n\n  const handleDeleteAudio = async (index, values, setFieldValue) => {\n    // const filename = values.sounds[index].audio\n\n    // try {\n    //   const res = await apiDeleteSound(filename)\n    // } catch (error) {\n    //   console.log(error)\n    // }\n\n    setFieldValue(`sounds[${index}].audio`, '')\n    setFieldValue(`sounds[${index}].audioFile`, '')\n  }\n\n  const handleSetCustomSoundIds = async (uid, index, values, setFieldValue) => {\n    // Check if array has value and add if false\n    if (!customSoundIds.includes(uid)) {\n      // Reset current audio url\n      setFieldValue(`sounds[${index}].audio`, '')\n      setFieldValue(`sounds[${index}].custom`, true)\n      return setCustomSoundIds([...customSoundIds, uid])\n    }\n\n    // Avoid error when no audio has been uploaded\n    if (customSoundIds.includes(uid) && !values.sounds[index].audio) {\n      // Remove the item from the array\n      const newArray = customSoundIds.filter(\n        customSoundId => customSoundId !== uid,\n      )\n      setFieldValue(`sounds[${index}].custom`, false)\n\n      // Set custom field to false\n\n      return setCustomSoundIds(newArray)\n    }\n\n    // Handle when audio has been uploaded\n    // and toggling back to default audio\n    if (customSoundIds.includes(uid) && values.sounds[index].audio) {\n      handleDeleteAudio(index, values, setFieldValue)\n\n      // Reset current audio url\n      setFieldValue(`sounds[${index}].audio`, '')\n      setFieldValue(`sounds[${index}].custom`, false)\n\n      // Remove the item from the array\n      const newArray = customSoundIds.filter(\n        customSoundId => customSoundId !== uid,\n      )\n      setCustomSoundIds(newArray)\n    }\n  }\n\n  const handlePlay = uid => {\n    // Check if array has value and add if false\n    if (!playingSounds.includes(uid)) {\n      return setPlayingSounds([...playingSounds, uid])\n    }\n  }\n\n  const handleEndPlay = uid => {\n    // Remove the item from the array\n    const newArray = playingSounds.filter(\n      playingSounds => playingSounds !== uid,\n    )\n    setPlayingSounds(newArray)\n  }\n\n  const handleOnDragEnd = (result, values, setFieldValue) => {\n    const { destination, source } = result\n\n    if (!destination) {\n      return\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n    const newSoundIds = Array.from(values.sounds)\n\n    const movedItemContent = newSoundIds[source.index]\n\n    newSoundIds.splice(source.index, 1)\n    newSoundIds.splice(destination.index, 0, movedItemContent)\n\n    setFieldValue('sounds', newSoundIds)\n  }\n\n  const handleEmojiOpen = uid => {\n    if (!emojiOpen.includes(uid)) {\n      return setEmojiOpen([...emojiOpen, uid])\n    }\n    // Remove the item from the array\n    const newArray = emojiOpen.filter(emojiId => emojiId !== uid)\n    return setEmojiOpen(newArray)\n  }\n\n  const handleEmojiClick = (emoji, index, uid, setFieldValue, values) => {\n\n    if (!emoji.skin) {\n      setFieldValue(`sounds[${index}].emojiId`, emoji.id)\n      setFieldValue(`sounds[${index}].emojiNative`, emoji.native)\n    }\n\n    if (emoji.id && emoji.skin && emoji.native) {\n      setFieldValue(`sounds[${index}].emojiId`, emoji.id)\n      setFieldValue(`sounds[${index}].emojiSkin`, emoji.skin)\n      setFieldValue(`sounds[${index}].emojiNative`, emoji.native)\n    }\n\n    handleEmojiOpen(uid)\n  }\n\n  if (isError) {\n    return (\n      <Fragment>\n        <MainLayout>\n          <Error />\n        </MainLayout>\n      </Fragment>\n    )\n  }\n\n  if (!initialData) {\n    return (\n      <Fragment>\n        <MainLayout>\n          <Loading />\n        </MainLayout>\n      </Fragment>\n    )\n  }\n\n  if (initialData) {\n    return (\n      <MainLayout margin=\"0 0 5rem 0\">\n        <EditorWrapper>\n          <EditorContainer>\n            <Formik\n              initialValues={initialData}\n              validationSchema={validationSchema}\n              onSubmit={onSubmit}\n            >\n              {({\n                setFieldValue,\n                setFieldError,\n                handleBlur,\n                isValid,\n                isSubmitting,\n              }) => (\n                  <Form>\n                    <EditorTitle\n                      control=\"input\"\n                      type=\"text\"\n                      label=\"\"\n                      name=\"title\"\n                      maxLength=\"45\"\n                      placeholder=\"Enter soundboard title\"\n                      autoComplete=\"off\"\n                    />\n                    <SettingsSection>\n                      <EditorSectionTitle>Settings</EditorSectionTitle>\n                      <Button disabled={!isValid || isSubmitting} type=\"submit\">\n                        Save\n                    </Button>\n                    </SettingsSection>\n                    <EditorSection>\n                      <EditorSelect\n                        control=\"select\"\n                        label=\"Soundboard Status\"\n                        name=\"status\"\n                        options={statusOptions}\n                      />\n                    </EditorSection>\n                    <EditorSectionTitle margin=\"2rem 0 1rem 0\">Sounds</EditorSectionTitle>\n                    <FieldArray name=\"sounds\">\n                      {({ push, remove, form }) => {\n                        const { values } = form\n                        const { sounds } = values\n                        return (\n                          <DragDropContext\n                            onDragEnd={result =>\n                              handleOnDragEnd(result, values, setFieldValue)\n                            }\n                          >\n                            <div>\n                              <Droppable droppableId=\"sounds\">\n                                {provided => (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.droppableProps}\n                                  >\n                                    {sounds.map((sound, index) => (\n                                      <Draggable\n                                        key={index}\n                                        draggableId={`sounds${index}`}\n                                        index={index}\n                                      >\n                                        {provided => (\n                                          <SoundSection\n                                            key={sound.uid}\n                                            ref={provided.innerRef}\n                                            {...provided.draggableProps}\n                                          >\n                                            {/* <EditorText\n                                              control=\"input\"\n                                              type=\"text\"\n                                              label=\"Sound Title\"\n                                              placeholder=\"Enter sound title\"\n                                              name={`sounds[${index}].title`}\n                                              maxLength=\"25\"\n                                              autoComplete=\"off\"\n                                            /> */}\n                                            {user.role === 'pro' && (\n                                              <EditorToggleWrapper>\n                                                <EditorToggle\n                                                  role=\"button\"\n                                                  className={customSoundIds.includes(sound.uid) ? \"active\" : ''}\n                                                  onClick={() =>\n                                                    handleSetCustomSoundIds(\n                                                      sound.uid,\n                                                      index,\n                                                      values,\n                                                      setFieldValue,\n                                                    )\n                                                  }\n                                                />\n                                                <p>Use custom sound</p>\n                                              </EditorToggleWrapper>\n                                            )}\n                                            {customSoundIds.includes(sound.uid) &&\n                                              !values.sounds[index].audio && (\n                                                <EditorUploadWrapper>\n                                                  <input\n                                                    type=\"file\"\n                                                    id=\"audioFile\"\n                                                    name={`sounds[${index}].audioFile`}\n                                                    accept=\"audio/mpeg3, audio/x-wav\"\n                                                    style={{ display: 'none' }}\n                                                    disabled={uploadingSounds.includes(\n                                                      sound.uid,\n                                                    )}\n                                                    onBlur={handleBlur}\n                                                    onChange={e =>\n                                                      handleUploadAudio(\n                                                        e,\n                                                        index,\n                                                        sound.uid,\n                                                        setFieldValue,\n                                                        setFieldError,\n                                                      )\n                                                    }\n                                                  />\n                                                  <UploadButton htmlFor=\"audioFile\">\n                                                    Upload\n                                                  </UploadButton>\n                                                  {uploadingSounds.includes(sound.uid) && (\n                                                    <img src={Loader} alt=\"Loader\" height=\"30\" />\n                                                  )}\n                                                </EditorUploadWrapper>\n                                              )}\n                                            {!customSoundIds.includes(\n                                              sound.uid,\n                                            ) && (\n                                                <EditorFieldWrapper margin=\"0 0 2rem 0\">\n                                                  <EditorSelect\n                                                    control=\"selectNe\"\n                                                    label=\"Sound Audio\"\n                                                    name={`sounds[${index}].audio`}\n                                                    options={soundOptions}\n                                                  />\n\n                                                  <ErrorMessage\n                                                    component={TextError}\n                                                    name={`sounds[${index}].audio`}\n                                                  />\n                                                </EditorFieldWrapper>\n                                              )}\n                                            {values.sounds[index].audio && (\n                                              <EditorPlayWrapper>\n                                                <Button\n                                                  size=\"s\"\n                                                  onClick={() =>\n                                                    handlePlay(sound.uid)\n                                                  }\n                                                  type=\"button\"\n                                                >\n                                                  Play\n                                                </Button>\n                                                <Sound\n                                                  url={values.sounds[index].audio}\n                                                  playStatus={\n                                                    playingSounds.includes(sound.uid)\n                                                      ? Sound.status.PLAYING\n                                                      : Sound.status.STOPPED\n                                                  }\n                                                  onFinishedPlaying={() =>\n                                                    handleEndPlay(sound.uid)\n                                                  }\n                                                />\n                                                {customSoundIds.includes(\n                                                  sound.uid,\n                                                ) && (\n                                                    <Button\n                                                      size=\"s\"\n                                                      type=\"button\"\n                                                      onClick={() =>\n                                                        handleDeleteAudio(\n                                                          index,\n                                                          values,\n                                                          setFieldValue,\n                                                        )\n                                                      }\n                                                    >\n                                                      Delete\n                                                    </Button>\n                                                  )}\n                                              </EditorPlayWrapper>\n                                            )}\n                                            <EditorEmojiWrapper>\n                                              <label>Sound Emoji</label>\n                                              <EditorEmojiSelect>\n                                                <Emoji\n                                                  emoji={\n                                                    values.sounds && values.sounds[index]\n                                                      ? values.sounds[index].emojiId\n                                                      : ''\n                                                  }\n                                                  skin={\n                                                    values.sounds && values.sounds[index]\n                                                      ? Number(\n                                                        values.sounds[index].emojiSkin,\n                                                      )\n                                                      : 1\n                                                  }\n                                                  set=\"apple\"\n                                                  size={32}\n                                                />\n                                                <select onClick={() =>\n                                                  handleEmojiOpen(sound.uid)\n                                                }>\n                                                </select>\n                                              </EditorEmojiSelect>\n                                              <ErrorMessage\n                                                component={TextError}\n                                                name={`sounds[${index}].emojiId`}\n                                              />\n                                            </EditorEmojiWrapper>\n                                            <Picker\n                                              style={{\n                                                position: 'absolute',\n                                                zIndex: '1000',\n                                                display: `${\n                                                  emojiOpen.includes(sound.uid)\n                                                    ? 'initial'\n                                                    : 'none'\n                                                  }`,\n                                              }}\n                                              set=\"apple\"\n                                              onClick={(emoji, e) =>\n                                                handleEmojiClick(\n                                                  emoji,\n                                                  index,\n                                                  sound.uid,\n                                                  setFieldValue,\n                                                  values\n                                                )\n                                              }\n                                            />\n                                            <EditButtons>\n                                              <i\n                                                {...provided.dragHandleProps}\n                                                className=\"las la-arrows-alt\"\n                                                style={{\n                                                  display: `${\n                                                    values.sounds.length === 1\n                                                      ? 'none'\n                                                      : 'initial'\n                                                    }`,\n                                                  fontSize: '1.25rem',\n                                                  color: '#999999',\n                                                }}\n                                              ></i>\n                                              <i\n                                                className=\"las la-times-circle\"\n                                                style={{\n                                                  display: `${\n                                                    values.sounds.length === 1\n                                                      ? 'none'\n                                                      : 'initial'\n                                                    }`,\n                                                  fontSize: '1.25rem',\n                                                  color: '#999999',\n                                                  cursor: 'pointer',\n                                                }}\n                                                onClick={() => remove(index)}\n                                              ></i>\n                                            </EditButtons>\n                                          </SoundSection>\n                                        )}\n                                      </Draggable>\n                                    ))}\n                                    {provided.placeholder}\n                                  </div>\n                                )}\n                              </Droppable>\n                              <Button\n                                type=\"button\"\n                                onClick={() =>\n                                  push({\n                                    title: '',\n                                    audio: '',\n                                    emojiId: 'star-struck',\n                                    emojiSkin: 1,\n                                    emojiNative: '🤩',\n                                    uid: generate(),\n                                    audioFile: '',\n                                    defaultAudio: '',\n                                    custom: false,\n                                  })\n                                }\n                              >\n                                Add Sound\n                        </Button>\n                            </div>\n                          </DragDropContext>\n                        )\n                      }}\n                    </FieldArray>\n                  </Form>\n                )}\n            </Formik>\n          </EditorContainer>\n        </EditorWrapper>\n      </MainLayout>\n    )\n  }\n}\n\nexport default SoundboardEditor\n","import React, { Fragment, useEffect } from \"react\";\nimport { useSoundboard } from '../../hooks/useSoundboard'\n\nconst AutoExpire = ({ children, id }) => {\n\n    const { setSoundboard } = useSoundboard()\n\n    useEffect(() => {\n        setTimeout(() => {\n            setSoundboard({ type: 'REMOVE_EMOJI', payload: { id } })\n        }, 6000);\n    }, []);\n\n\n    return <Fragment>{children}</Fragment>;\n};\n\nexport default AutoExpire;\n","import styled, { keyframes } from 'styled-components'\nimport EmojiWrapper from './EmojiWrapper'\n\nconst floatAnimation = (one, two) => keyframes`\n    0% { bottom: -10%; transform : translateX(0)}\n    50% { transform: translateX(${one}px)}\n    100% {bottom: 110%; transform: translateX(${two}px)}\n`;\n\nconst EmojiBubble = styled(EmojiWrapper)`\nposition: absolute;\n  user-select: none;\n  font-size: ${({ size }) => (size ? size : 2)}rem;\n  bottom: 0;\n  left: ${({ left }) => (left ? left : 10)}%;\n  animation: ${({ one, two }) => floatAnimation(one, two)}\n    ${({ size }) => (size < 3 ? 5 : 6)}s ease-in forwards;\n`\nexport default EmojiBubble","import styled from 'styled-components'\n\nconst SoundboardTitle = styled.h1`\n    color: ${props => props.theme.colors.light1};\n    font-size: 2.25rem;\n    font-weight: 500;\n    grid-column: 1 / span 6;\n    margin-top: ${props => props.theme.spacings.m}\n`\n\nexport default SoundboardTitle","import React from 'react'\n\nimport MaxWidthSection from '../Layout/MaxWidthSection'\nimport SoundboardTitle from './SoundboardTitle'\n\nconst SoundboardHeader = ({ title }) => {\n    return (\n        <MaxWidthSection>\n            <SoundboardTitle>{title}</SoundboardTitle>\n        </MaxWidthSection>\n    )\n}\n\nexport default SoundboardHeader\n","import styled from 'styled-components'\n\nconst SoundboardModal = styled.div`\n    height: 100%;\n    width: 100%;\n    background-color: ${props => props.theme.colors.overlay1};\n`\n\nexport default SoundboardModal","import React, { Fragment, useEffect, useState, useRef } from 'react'\nimport { navigate } from '@reach/router'\nimport io from 'socket.io-client'\nimport useSound from 'use-sound'\nimport { Emoji } from 'emoji-mart'\nimport { generate } from 'short-id'\n\nimport { useSoundboard } from '../../hooks/useSoundboard'\nimport { apiGetSoundboard } from '../../api/Soundboard'\nimport MainLayout from '../Layout/MainLayout'\nimport EmojiButton from '../Emoji/EmojiButton'\nimport SoundboardContainer from './SoundboardContainer'\nimport AutoExpire from '../Emoji/AutoExpire'\nimport EmojiBubble from '../Emoji/EmojiBubble'\nimport EmojiBubbleContainer from '../Emoji/EmojiBubbleContainer'\nimport SoundboardHeader from './SoundboardHeader'\nimport Loading from '../Loading/Loading'\nimport Error from '../Error/Error'\nimport SoundboardModal from './SoundboardModal'\n\nlet socket\n\nconst Soundboard = props => {\n  const { soundboard, setSoundboard } = useSoundboard()\n\n  const [initialData, setInitialData] = useState({})\n\n  const [spriteObj, setSpriteObj] = useState({})\n\n  const [isError, setIsError] = useState(false)\n\n  const [isHowlerLoaded, setIsHowlerLoaded] = useState(false)\n\n  const randomNumber = (max, min) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n\n  const randomPosOrNeg = (max, min) => {\n    let randomNumber = Math.floor(Math.random() * (max - min + 1)) + min\n\n    randomNumber *= Math.floor(Math.random() * 2) === 1 ? 1 : -1\n\n    return randomNumber\n  }\n\n  // Load soundboard data\n  useEffect(() => {\n    // Define async function and call it later\n    const fetchData = async sbId => {\n      const data = await apiGetSoundboard(sbId)\n\n      // If success set data\n      if (data.status === 'success') {\n        const soundboard = data.data.soundboard\n\n        setInitialData(soundboard)\n      }\n\n      if (data.status !== 'success') {\n        switch (data.error.statusCode) {\n          case 401:\n            return navigate('/login')\n          default:\n            return navigate('/login')\n        }\n      }\n    }\n\n    // If soundboard ID is passed in get the data\n    if (props.sbId) {\n      fetchData(props.sbId)\n    }\n\n    if (!props.sbId) {\n      setIsError(true)\n    }\n  }, [])\n\n  // Set sprite object\n  useEffect(() => {\n    if (initialData.sounds) {\n      const timesArray = initialData.sounds.map(sound => sound.times)\n\n      const spriteObj = Object.assign(\n        ...timesArray.map((time, i) => ({ [i]: time })),\n      )\n\n      setSpriteObj(spriteObj)\n    }\n  }, [initialData.sounds])\n\n  const silentRefs = useRef([])\n\n  const buttonRefs = useRef([])\n\n  // Create websocket\n  useEffect(() => {\n    const room = props.sbId\n\n    socket = io(`${process.env.REACT_APP_API}`)\n\n    socket.emit('join', room)\n\n    socket.on('sound', id => {\n      silentRefs.current[id].click()\n    })\n\n    socket.on('emoji', ({ emojiId, emojiNative }) => {\n      setSoundboard({\n        type: 'ADD_EMOJI',\n        payload: {\n          emojiId,\n          emojiNative,\n          size: randomNumber(3, 2),\n          left: randomNumber(100, 0),\n          one: randomPosOrNeg(200, 50),\n          two: randomPosOrNeg(200, 50),\n          id: generate(),\n        },\n      })\n    })\n\n    return () => {\n      socket.emit('disconnect')\n      socket.off()\n    }\n  }, [])\n\n  // Cleanup global emojiQueue on unmount\n  useEffect(() => {\n    return () => {\n      setSoundboard({ type: 'RESET_EMOJI' })\n    }\n  }, [])\n\n  const [play, { sound }] = useSound(initialData.sprite, {\n    onload: () => {\n      setIsHowlerLoaded(true)\n    },\n  })\n\n  useEffect(() => {\n    if (isHowlerLoaded) {\n      sound._sprite = spriteObj\n    }\n  }, [isHowlerLoaded])\n\n  const handlePlayClick = (emojiId, emojiNative, i) => {\n    socket.emit('sound', i)\n\n    socket.emit('emoji', { emojiId, emojiNative })\n\n    play({ id: String(i) })\n\n    setSoundboard({\n      type: 'ADD_EMOJI',\n      payload: {\n        emojiId,\n        emojiNative,\n        size: randomNumber(3, 2),\n        left: randomNumber(100, 0),\n        one: randomPosOrNeg(200, 50),\n        two: randomPosOrNeg(200, 50),\n        id: generate(),\n      },\n    })\n  }\n\n  const handlePlayEnter = (emojiId, emojiNative, e, i) => {\n    if (e.key === 'Enter') {\n      socket.emit('sound', i)\n\n      socket.emit('emoji', { emojiId, emojiNative })\n\n      play({ id: String(i) })\n\n      setSoundboard({\n        type: 'ADD_EMOJI',\n        payload: {\n          emojiId,\n          emojiNative,\n          size: randomNumber(3, 2),\n          left: randomNumber(100, 0),\n          one: randomPosOrNeg(200, 50),\n          two: randomPosOrNeg(200, 50),\n          id: generate(),\n        },\n      })\n    }\n  }\n\n  const handlePsuedoClick = i => {\n    play({ id: String(i) })\n  }\n\n  if (isError) {\n    return (\n      <Fragment>\n        <MainLayout>\n          <Error />\n        </MainLayout>\n      </Fragment>\n    )\n  }\n\n  if (!initialData || !initialData.sounds) {\n    return (\n      <Fragment>\n        <MainLayout>\n          <Loading />\n        </MainLayout>\n      </Fragment>\n    )\n  }\n\n  return (\n    <Fragment>\n      <SoundboardModal></SoundboardModal>\n      <MainLayout>\n        <SoundboardHeader title={initialData.title} />\n        <SoundboardContainer gtm=\"2rem\" gsm=\"2rem\" gts=\"2rem\" gss=\"2rem\">\n          {initialData.sounds.map((sound, i) => (\n            <EmojiButton\n              key={sound.uid}\n              innerRef={el => (buttonRefs.current[i] = el)}\n              endl=\"span 2\"\n              endm=\"span 2\"\n              ends=\"span 3\"\n              onClick={() =>\n                handlePlayClick(sound.emojiId, sound.emojiNative, i)\n              }\n              onKeyDown={e =>\n                handlePlayEnter(sound.emojiId, sound.emojiNative, e, i)\n              }\n            >\n              <Emoji\n                emoji={sound.emojiId}\n                skin={Number(sound.emojiSkin)}\n                size={64}\n                native={true}\n              />\n            </EmojiButton>\n          ))}\n        </SoundboardContainer>\n        {initialData.sounds.map((sound, i) => (\n          <span\n            style={{ pointerEvents: 'none', position: 'absolute' }}\n            key={i}\n            role=\"button\"\n            aria-label=\"hidden button\"\n            tabIndex=\"-1\"\n            ref={el => (silentRefs.current[i] = el)}\n            onClick={() => handlePsuedoClick(i)}\n            onKeyDown={() => handlePsuedoClick(i)}\n          />\n        ))}\n      </MainLayout>\n      <EmojiBubbleContainer>\n        {soundboard.emojis.emojiQueue.map(\n          ({ id, emojiId, emojiNative, size, left, one, two }) => (\n            <AutoExpire key={id} id={id}>\n              <EmojiBubble\n                label={emojiId}\n                symbol={emojiNative}\n                size={size}\n                left={left}\n                one={one}\n                two={two}\n              />\n            </AutoExpire>\n          ),\n        )}\n      </EmojiBubbleContainer>\n    </Fragment>\n  )\n}\n\nexport default Soundboard\n","import styled from 'styled-components'\nimport MaxWidthSection from '../Layout/MaxWidthSection'\n\nconst DashboardWrapper = styled(MaxWidthSection)`\n`\n\nexport default DashboardWrapper","import styled from 'styled-components'\n\nconst DashboardTable = styled.table`\n    width: 100%;\n    background-color: ${props => props.theme.colors.dark2};\n    border: none;\n    border-spacing: 0;\n    border-collapse: collapse;\n    table-layout: fixed;\n    overflow-x: scroll;\n\n    th {\n        text-align: left;\n        font-size: 1rem;\n        font-weight: 700;\n        color: ${props => props.theme.colors.light1};\n    }\n\n    th:nth-child(1) {\n        width: 40%;\n    }\n\n    /* th:nth-child(2) {\n        width: 25%;\n    }\n\n    th:nth-child(3) {\n        width: 25%;\n    }\n\n    th:nth-child(4) {\n        width: 10%;\n    } */\n\n    tr:not(:first-child):hover {\n        background-color: ${props => props.theme.colors.dark3};\n        cursor: pointer;\n    }\n\n    td:last-child {\n        text-align: right;\n    }\n\n    th, td {\n        padding: 1.5rem;\n    }\n\n\n    td a, td p {\n        color: ${props => props.theme.colors.light1};\n        font-size: 1rem;\n        font-weight: 400;\n    }\n\n    td a {\n        text-decoration: none;\n        transition: ${props => props.theme.animations.link};\n\n        &:hover {\n            color: ${props => props.theme.colors.blue1};\n        }\n\n    }\n\n    @media ${props => props.theme.breakpoints.m} {\n      grid-column: 1 / span 6\n  }\n\n`\n\nexport default DashboardTable","import styled from 'styled-components'\n\nconst DashboardTitle = styled.h1`\n    color: ${props => props.theme.colors.light1};\n    font-size: 2.25rem;\n    font-weight: 500;\n    grid-column: 1 / span 6;\n    margin-top: ${props => props.theme.spacings.m}\n`\n\nexport default DashboardTitle","import styled from 'styled-components'\n\nconst DashboardTableWrapper = styled.div`\n    grid-column: 1 / span 12;\n    overflow-x: auto;\n    background-color: ${props => props.theme.colors.dark2};\n\n    @media ${props => props.theme.breakpoints.m} {\n      grid-column: 1 / span 6\n  }\n\n`\n\nexport default DashboardTableWrapper","import React from 'react'\nimport styled from 'styled-components'\n\nconst PillWrapper = styled.div`\n    padding: 0.5rem 1rem;\n    text-transform: capitalize;\n    color: ${props => props.theme.colors.light1};\n    font-size: 0.75rem;\n    font-weight: 700;\n    width: fit-content;\n    background-color: ${props => {\n        switch (props.status) {\n            case 'drafted':\n                return props.theme.colors.blue1\n            case 'published':\n                return props.theme.colors.green1\n            case 'archived':\n                return props.theme.colors.pink1\n            default:\n                return props.theme.colors.blue1\n        }\n    }}\n`\n\nconst Pill = ({ status }) => {\n    return (\n        <PillWrapper status={status}>\n            {status}\n        </PillWrapper>\n    )\n}\n\nexport default Pill\n","import styled from 'styled-components'\nimport MaxWidthSection from '../Layout/MaxWidthSection'\n\nconst PaginationWrapper = styled(MaxWidthSection)`\n    margin-top: 1.5rem;\n`\n\nexport default PaginationWrapper","import styled from 'styled-components'\nimport ArrowPrev from '../../images/arrowPrev.svg'\nimport ArrowNext from '../../images/arrowNext.svg'\n\nconst PaginationButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 3rem;\n    height: 3rem;\n    border: none;\n    border-radius: 100%;\n    background-color: ${props => props.theme.colors.dark2};\n    cursor: pointer;\n    opacity: 1;\n    transition: background-color 0.3s ease;\n    margin: 0 1rem;\n\n    &::after {\n        content: ${props => props.dir === 'prev' ? `url(${ArrowPrev})` : `url(${ArrowNext})`} ;\n    }\n\n    &:hover {\n        background-color: ${props => props.isLast || props.isFirst ? props.theme.colors.dark2 : props.theme.colors.dark3};\n    }\n\n    &:disabled {\n        cursor: auto; \n       opacity: 0.4;\n    }\n\n`\n\nexport default PaginationButton\n","import styled from 'styled-components'\n\nconst PaginationButtonWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    grid-column: 1 / span 12;\n\n    @media ${props => props.theme.breakpoints.m} {\n      grid-column: 1 / span 6;\n  }\n\n`\n\nexport default PaginationButtonWrapper","import styled from 'styled-components'\n\nconst EmptySection = styled.div`\n    position: absolute;\n    max-width: 25rem;\n    top: 30%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n`\n\nexport default EmptySection","import styled from 'styled-components'\n\nconst EmptyTitle = styled.h1`\n    color: ${props => props.theme.colors.light1};\n    font-size: 2.25rem;\n    font-weight: 500;\n    margin-bottom: 2rem;\n`\n\nexport default EmptyTitle","import React from 'react'\nimport { Emoji } from 'emoji-mart'\nimport { navigate } from '@reach/router'\nimport EmptySection from './EmptySection'\nimport EmptyTitle from './EmptyTitle'\nimport Button from '../Button/Button'\n\nconst Error = () => {\n    return (\n        <EmptySection>\n            <Emoji\n                emoji='wave'\n                skin={1}\n                size={64}\n                native={true}\n            />\n            <EmptyTitle>Welcome! Let's create your first soundboard.</EmptyTitle>\n            <Button onClick={() => navigate('/soundboard/create')}>Create</Button>\n        </EmptySection>\n    )\n}\n\nexport default Error","import styled from 'styled-components'\n\nconst OpenButton = styled.i`\n    display: ${props => props.status === 'published' ? 'initial' : 'none'};\n    padding: 0.5rem;\n    font-size: 1.25rem;\n    color: #999999;\n    transition: ${props => props.theme.animations.link};\n\n    &:hover {\n        color: ${props => props.theme.colors.blue1};\n    }\n\n`\n\nexport default OpenButton","import React, { Fragment, useState, useEffect } from 'react'\nimport { navigate, useLocation } from '@reach/router'\nimport moment from 'moment'\nimport { parse } from 'query-string'\n\nimport { apiGetAllMySoundboards } from '../../api/Soundboard'\nimport MainLayout from '../Layout/MainLayout'\nimport Loading from '../Loading/Loading'\nimport DashboardWrapper from './DashboardWrapper'\nimport DashboardTable from './DashboardTable'\nimport DashboardTitle from './DashboardTitle'\nimport DashboardTableWrapper from './DashboardTableWrapper'\nimport Pill from '../Pill/Pill'\nimport PaginationWrapper from '../Pagination/PaginationWrapper'\nimport PaginationButton from '../Pagination/PaginationButton'\nimport PaginationButtonWrapper from '../Pagination/PaginationButtonWrapper'\nimport Empty from './Empty'\nimport OpenButton from './OpenButton'\n\nconst Dashboard = () => {\n  const [initialData, setInitialData] = useState(null)\n\n  const [totalCount, setTotalCount] = useState(0)\n\n  const [numPages, setNumPages] = useState(0)\n\n  const [isFirst, setIsFirst] = useState(false)\n\n  const [isLast, setIsLast] = useState(false)\n\n  const [prevPage, setPrevPage] = useState('')\n\n  const [nextPage, setNextPage] = useState('')\n\n  const [isError, setIsError] = useState(false)\n\n  const location = useLocation()\n\n  const searchParams = parse(location.search)\n\n  const currentPage = searchParams.page ? Number(searchParams.page) : 0\n\n  // Load data\n  useEffect(() => {\n    // Define async function and call it later\n    const fetchData = async pageNum => {\n      const data = await apiGetAllMySoundboards(pageNum)\n\n      // If success set data\n      if (data.status === 'success') {\n        setTotalCount(data.data.totalSoundboards)\n        setInitialData(data.data.soundboards)\n      }\n\n      if (data.status !== 'success') {\n        switch (data.error.statusCode) {\n          case 401:\n            return navigate('/login')\n          default:\n            return navigate('/login')\n        }\n      }\n    }\n\n    // Handle no page query\n    if (!searchParams.page) {\n      navigate('/dashboard?page=1')\n    }\n\n    // Pass in page if provided\n    if (searchParams.page) {\n      fetchData(searchParams.page)\n    }\n\n    return () => {\n      setTotalCount(0)\n      setInitialData(null)\n      setIsError(false)\n    }\n  }, [searchParams.page])\n\n  // Set pagination values\n  useEffect(() => {\n    if (initialData && totalCount !== 0) {\n      setNumPages(Math.ceil(totalCount / 10))\n      setIsFirst(currentPage === 1)\n      setIsLast(currentPage === numPages)\n      setPrevPage(\n        currentPage - 1 === 1\n          ? '/dashboard?page=1'\n          : `/dashboard?page=${currentPage - 1}`,\n      )\n      setNextPage(`/dashboard?page=${currentPage + 1}`)\n    }\n\n    return () => {\n      setNumPages(0)\n      setIsFirst(false)\n      setIsLast(false)\n      setPrevPage('')\n      setNextPage('')\n    }\n  }, [initialData, totalCount, currentPage, numPages])\n\n  const handleKeyDown = (e, id) => {\n    if (e.key === 'Enter') {\n      navigate(`/soundboard/edit/${id}`)\n    }\n  }\n\n  const handlePagination = (e, page) => {\n    if (e.key === 'Enter') {\n      navigate(page)\n    }\n  }\n\n  const handleSoundboardOpen = (e, id) => {\n    e.stopPropagation()\n\n    navigate(`/soundboard/${id}`)\n  }\n\n  const handleSoundboardOpenClick = (e, id) => {\n    e.stopPropagation()\n\n    if (e.key === 'Enter') {\n      navigate(`/soundboard/${id}`)\n    }\n  }\n\n  if (isError) {\n    return (\n      <Fragment>\n        <MainLayout>\n          <Loading />\n        </MainLayout>\n      </Fragment>\n    )\n  }\n\n  if (!initialData) {\n    return (\n      <Fragment>\n        <MainLayout>\n          <Loading />\n        </MainLayout>\n      </Fragment>\n    )\n  }\n\n  if (initialData && initialData.length === 0) {\n    return (\n      <MainLayout>\n        <Empty />\n      </MainLayout>\n    )\n  }\n\n  if (initialData) {\n    return (\n      <MainLayout margin=\"0 0 5rem 0\">\n        <DashboardWrapper>\n          <DashboardTitle>Soundboards</DashboardTitle>\n          <DashboardTableWrapper>\n            <DashboardTable>\n              <tbody>\n                <tr>\n                  <th>Title</th>\n                  <th>Modified</th>\n                  <th>Status</th>\n                  <th></th>\n                </tr>\n                {initialData.map((soundboard, i) => (\n                  <tr\n                    key={i}\n                    role=\"button\"\n                    tabIndex=\"0\"\n                    onKeyDown={e => handleKeyDown(e, soundboard.id)}\n                    onClick={() =>\n                      navigate(`/soundboard/edit/${soundboard.id}`)\n                    }\n                  >\n                    <td>\n                      <p>{soundboard.title}</p>\n                    </td>\n                    <td>\n                      <p>\n                        {moment(soundboard.updatedAt).utc().format('MM/DD/YY')}\n                      </p>\n                    </td>\n                    <td>\n                      <Pill status={soundboard.status} />\n                    </td>\n                    <td>\n                      <OpenButton\n                        role=\"button\"\n                        tabIndex=\"0\"\n                        onClick={e => handleSoundboardOpen(e, soundboard.id)}\n                        onKeyDown={e =>\n                          handleSoundboardOpenClick(e, soundboard.id)\n                        }\n                        status={soundboard.status}\n                        className=\"las la-external-link-alt\"\n                      />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </DashboardTable>\n          </DashboardTableWrapper>\n        </DashboardWrapper>\n        <PaginationWrapper>\n          <PaginationButtonWrapper>\n            <PaginationButton\n              dir=\"prev\"\n              isFirst={isFirst}\n              disabled={isFirst}\n              role=\"button\"\n              onClick={() => navigate(prevPage)}\n              onKeyDown={e => handlePagination(e, prevPage)}\n            />\n            <PaginationButton\n              dir=\"next\"\n              isLast={isLast}\n              disabled={isLast}\n              role=\"button\"\n              onClick={() => navigate(nextPage)}\n              onKeyDown={e => handlePagination(e, nextPage)}\n            />\n          </PaginationButtonWrapper>\n        </PaginationWrapper>\n      </MainLayout>\n    )\n  }\n}\n\nexport default Dashboard\n","export const apiGetMe = async () => {\n    try {\n        const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/me`, {\n            method: 'GET',\n            credentials: 'include',\n        })\n\n        const data = await res.json()\n\n        return data\n\n    } catch (error) {\n        return error\n    }\n}\n\nexport const apiUpdateMe = async (data) => {\n    const body = JSON.stringify({\n        data,\n    })\n\n    try {\n        const res = await fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/updateMe`, {\n            method: 'PATCH',\n            credentials: 'include',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: body,\n        })\n\n        const data = await res.json()\n\n        return data\n    } catch (error) {\n        return error\n    }\n}","import styled from 'styled-components'\n\nconst UploaderWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 2rem;\n\n    label {\n        color: ${props => props.theme.colors.light2};\n        font-size: 0.9rem;\n        font-weight: 500;\n        margin-bottom: 0.5rem;\n    }\n\n`\n\nexport default UploaderWrapper","import styled from 'styled-components'\n\nconst Profile = styled.div`\n    width: 3rem;\n    height: 3rem;\n    background-image: url(${props => props.photo});\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-color: ${ props => props.theme.colors.dark1};\n    border-radius: 100%;\n    margin: 0 0 1rem 0;\n`\n\nexport default Profile","import styled from 'styled-components'\n\nconst ProfileHeader = styled.header`\n    display: flex;\n    align-items: center;\n    margin-top: 2rem;\n\n    div {\n        margin-left: auto;\n    }\n\n    div button:last-of-type {\n        margin-right: 0;\n    }\n`\n\nexport default ProfileHeader","import styled from 'styled-components'\n\nconst NavLinkButton = styled.button`\n    font-size: 1rem;\n    font-weight: 700;\n    text-decoration: none;\n    margin: 0 ${props => props.theme.spacings.s};\n    transition: ${props => props.theme.animations.link};\n    color: ${props => props.theme.colors.light1};\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n\n    &:hover {\n        color: ${props => props.theme.colors.blue1};\n    }\n`\n\nexport default NavLinkButton","import React, { Fragment, useEffect, useMemo, useState, useRef } from 'react'\nimport { navigate } from '@reach/router'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { toast } from 'react-toastify';\nimport Uppy from '@uppy/core'\nimport { DashboardModal } from '@uppy/react'\nimport XHRUpload from '@uppy/xhr-upload';\nimport ImageEditor from '@uppy/image-editor'\n\nimport { apiGetMe, apiUpdateMe } from '../../api/User'\nimport { apiGetPortalSession } from '../../api/Payment'\nimport { useAuth } from '../../hooks/useAuth'\nimport MainLayout from '../Layout/MainLayout'\nimport AuthContainer from '../Auth/AuthContainer'\nimport AuthWrapper from '../Auth/AuthWrapper'\nimport Button from '../Button/Button'\nimport AuthText from '../Auth/AuthText'\nimport AuthTextWrapper from '../Auth/AuthTextWrapper'\nimport AuthTitle from '../Auth/AuthTitle'\nimport UploaderWrapper from '../Profile/UploaderWrapper'\nimport Profile from './Profile'\nimport Loading from '../Loading/Loading'\nimport ProfileHeader from './ProfileHeader'\nimport Error from '../Error/Error'\nimport NavLinkButton from '../Navigation/NavLinkButton'\n\nimport '../Profile/picker.css'\nimport '@uppy/core/dist/style.min.css'\nimport '@uppy/dashboard/dist/style.min.css'\nimport '@uppy/image-editor/dist/style.min.css';\n\nconst UpdateProfileForm = () => {\n\n    const formikRef = useRef()\n\n    const { user, logout } = useAuth()\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const [isError, setIsError] = useState(false)\n\n    const [initialData, setInitialData] = useState(null)\n\n    const uppy = useMemo(() => {\n        // Do all the configuration here\n        return new Uppy({\n            allowMulipleUploads: false,\n            restrictions: {\n                maxFileSize: 15 * 1024 * 1024,\n                maxNumberOfFiles: 1,\n                allowedFileTypes: ['.jpg', '.jpeg', '.png'],\n            },\n        })\n            .use(XHRUpload, {\n                id: 'XHRUploader',\n                endpoint: `${process.env.REACT_APP_API_ENDPOINT}/users/uploadProfile`,\n                formData: true,\n                withCredentials: true,\n                fieldName: 'photo',\n                limit: 1,\n            })\n            .use(ImageEditor, {\n                quality: 0.8,\n                cropperOptions: {\n                    viewMode: 1,\n                    background: false,\n                    autoCropArea: 1,\n                    responsive: true,\n                    initialAspectRatio: 1,\n                    aspectRatio: 1,\n                },\n            })\n            .on('upload-success', (file, response) => {\n                formikRef.current.setFieldValue('photo', response.body.data.gcsUrl)\n            });\n    }, []);\n\n    // Load data for form\n    useEffect(() => {\n        // Define async function and call it later\n        const fetchData = async sbId => {\n            try {\n                const data = await apiGetMe()\n\n                // If success set data\n                if (data.status === 'success') {\n\n                    setInitialData({\n                        username: data.data.data.username,\n                        email: data.data.data.email,\n                        photo: data.data.data.photo,\n                    })\n\n                    return\n                }\n\n                if (data.status !== 'success') {\n                    switch (data.error.statusCode) {\n                        case 401:\n                            return navigate('/login')\n                        default:\n                            return navigate('/login')\n                    }\n                }\n\n\n            } catch (error) {\n                setIsError(true)\n            }\n        }\n\n        fetchData()\n\n        return () => setInitialData(null)\n\n    }, [])\n\n    // Clean up uppy on unmount\n    useEffect(() => {\n        return () => uppy.close()\n    }, [uppy])\n\n    const handleClose = () => {\n        setIsModalOpen(false);\n    };\n\n    const handleOpen = () => {\n        setIsModalOpen(true);\n    };\n\n    const validationSchema = Yup.object().shape({\n        photo: Yup.string().required('Required'),\n        username: Yup.string()\n            .required('Required')\n            .matches(\n                /^(?=.{1,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$/,\n                'Invalid username',\n            )\n            .test(/* name */ 'unique-username',  /* failure message */ 'Username already in use', function (value) {\n                return fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/usernameAvailable`, {\n                    method: 'POST',\n                    credentials: 'include',\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        username: value,\n                        currentUsername: user.username,\n                    }),\n                })\n                    .then(res => res.json())\n                    .then(data => data.data.available)\n            })\n        ,\n        email: Yup.string()\n            .required('Required')\n            .matches(\n                /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/,\n                'Invalid email',\n            )\n            .test(/* name */ 'unique-email',  /* failure message */ 'Email already in use', function (value) {\n                return fetch(`${process.env.REACT_APP_API_ENDPOINT}/users/emailAvailable`, {\n                    method: 'POST',\n                    credentials: 'include',\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        email: value,\n                        currentEmail: user.email\n                    }),\n                })\n                    .then(res => res.json())\n                    .then(data => data.data.available)\n            })\n    })\n\n    const onSubmit = async data => {\n        try {\n            const res = await apiUpdateMe(data)\n\n            if (res.status === 'success') {\n                toast('Profile updated! 🥳')\n            }\n\n            if (res.status === 'fail' || res.status === 'error') {\n                toast.error('Could not update profile.')\n            }\n\n        } catch (error) {\n            toast.error('Could not update profile.')\n        }\n    }\n\n    const handleCustomerPortal = async (customerId) => {\n        try {\n            const res = await apiGetPortalSession(customerId)\n\n            if (res.status === 'success') {\n                // Navigate to stripe customer portal\n                navigate(res.session.url)\n            }\n\n            if (res.status !== 'success') {\n                toast.error('Could not find customer portal.')\n            }\n        } catch (error) {\n            toast.error('Could not find customer portal.')\n        }\n    }\n\n    if (isError) {\n        return (\n            <Fragment>\n                <MainLayout>\n                    <Error />\n                </MainLayout>\n            </Fragment>\n        )\n    }\n\n    if (!initialData) {\n        return (\n            <Fragment>\n                <MainLayout>\n                    <Loading />\n                </MainLayout>\n            </Fragment>\n        )\n    }\n\n    if (initialData) {\n        return (\n            <MainLayout>\n                <Formik\n                    innerRef={formikRef}\n                    initialValues={initialData}\n                    validationSchema={validationSchema}\n                    onSubmit={onSubmit}\n                    validateOnBlur={true}\n                    validateOnChange={false}\n                >\n                    {({ isValid, isSubmitting, setFieldValue, values }) => (\n                        <Fragment>\n                            <AuthContainer>\n                                <ProfileHeader>\n                                    <AuthTitle>Profile</AuthTitle>\n                                    <div>\n                                        <NavLinkButton onClick={logout} type=\"button\">Logout</NavLinkButton>\n                                        {user.customerId &&\n                                            <NavLinkButton onClick={() => handleCustomerPortal(user.customerId)} type=\"button\">Manage Billing</NavLinkButton>\n                                        }\n                                    </div>\n                                </ProfileHeader>\n                                <AuthWrapper>\n                                    <Form>\n                                        <UploaderWrapper>\n                                            <label htmlFor=\"photo\">Photo</label>\n                                            <Profile photo={values.photo} />\n                                            <Button size=\"s\" onClick={handleOpen}>Upload</Button>\n                                            <DashboardModal\n                                                uppy={uppy}\n                                                closeModalOnClickOutside\n                                                open={isModalOpen}\n                                                onRequestClose={handleClose}\n                                                plugins={['Instagram', 'ImageEditor']}\n                                                metaFields={[\n                                                    { id: 'name', name: 'Name', placeholder: 'File name' },\n                                                ]}\n                                                locale={{\n                                                    strings: {\n                                                        dropPasteImport: 'Drop here or %{browse}'\n                                                    }\n                                                }}\n                                                proudlyDisplayPoweredByUppy={false}\n                                                theme=\"dark\"\n                                            />\n                                        </UploaderWrapper>\n                                        <AuthTextWrapper>\n                                            <AuthText\n                                                control=\"input\"\n                                                type=\"text\"\n                                                label=\"Username\"\n                                                name=\"username\"\n                                                placeholder=\"Enter your username\"\n                                                autoComplete=\"off\"\n                                            />\n                                        </AuthTextWrapper>\n                                        <AuthTextWrapper margin=\"2rem 0 1.5rem 0\">\n                                            <AuthText\n                                                control=\"input\"\n                                                type=\"text\"\n                                                label=\"Email\"\n                                                name=\"email\"\n                                                placeholder=\"Enter your email\"\n                                                autoComplete=\"on\"\n                                            />\n                                        </AuthTextWrapper>\n                                        <Button size=\"s\" disabled={!isValid || isSubmitting} type=\"submit\">\n                                            Update\n                                        </Button>\n                                    </Form>\n                                </AuthWrapper>\n                            </AuthContainer>\n                        </Fragment>\n                    )}\n                </Formik>\n            </MainLayout>\n        )\n    }\n}\n\nexport default UpdateProfileForm","import React, { Component } from 'react'\nimport { Router } from '@reach/router'\nimport { ThemeProvider } from 'styled-components'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport { ProvideAuth } from './hooks/useAuth'\nimport { ProvideSoundboard } from './hooks/useSoundboard'\nimport { GlobalStyles } from './styles/GlobalStyles'\nimport Theme from './styles/theme'\nimport StyledToast from './components/Toast/StyledToast'\nimport Homepage from './components/Homepage/Homepage'\nimport SignupForm from './components/Auth/SignupForm'\nimport LoginForm from './components/Auth/LoginForm'\nimport Privacy from './components/Privacy/Privacy'\nimport Tos from './components/Tos/Tos'\nimport ForgotPassword from './components/Auth/ForgotPassword'\nimport ResetPassword from './components/Auth/ResetPassword'\nimport PrivateRoute from './components/Auth/PrivateRoute'\nimport SoundboardEditor from './components/Editor/SoundboardEditor'\nimport Soundboard from './components/Sound/Soundboard'\nimport Dashboard from './components/Dashboard/Dashboard'\nimport UpdateProfileForm from './components/Profile/UpdateProfileForm'\n\nclass App extends Component {\n  render() {\n    return (\n      <ProvideAuth>\n        <ProvideSoundboard>\n          <ThemeProvider theme={Theme}>\n            <GlobalStyles />\n            <StyledToast />\n            <Router>\n              <Homepage path=\"/\" />\n              <SignupForm path=\"/signup\" />\n              <LoginForm path=\"/login\" />\n              <ForgotPassword path=\"/forgot-password\" />\n              <ResetPassword path=\"/reset-password\" />\n              <Privacy path=\"/privacy\" />\n              <Tos path=\"/tos\" />\n              <Soundboard path=\"/soundboard/:sbId\" />\n              <PrivateRoute\n                as={SoundboardEditor}\n                roles={['user', 'pro', 'admin']}\n                path=\"/soundboard/create\"\n              />\n              <PrivateRoute\n                as={SoundboardEditor}\n                roles={['user', 'pro', 'admin']}\n                path=\"/soundboard/edit/:sbId\"\n              />\n              <PrivateRoute\n                as={Dashboard}\n                roles={['user', 'pro', 'admin']}\n                path=\"/dashboard\"\n              />\n              <PrivateRoute\n                as={UpdateProfileForm}\n                roles={['user', 'pro', 'admin']}\n                path=\"/profile\"\n              />\n            </Router>\n          </ThemeProvider>\n        </ProvideSoundboard>\n      </ProvideAuth>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}